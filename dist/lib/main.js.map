{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/util.tsx","webpack:///./src/map.tsx","webpack:///./src/index.tsx","webpack:///./src/controls/index.tsx","webpack:///./src/controls/attribution.tsx","webpack:///./src/map.css?ad72","webpack:///./src/map.css","webpack:///./src/controls/controls.tsx","webpack:///./src/controls/full-screen.tsx","webpack:///./src/controls/mouse-position.tsx","webpack:///./src/controls/overview-map.tsx","webpack:///./src/controls/rotate.tsx","webpack:///./src/controls/scale-line.tsx","webpack:///./src/controls/zoom.tsx","webpack:///./src/controls/zoom-slider.tsx","webpack:///./src/controls/zoom-to-extent.tsx","webpack:///./src/custom/index.tsx","webpack:///./src/custom/google-street-view-panorama.tsx","webpack:///./src/custom/popup.tsx","webpack:///./src/custom/popup.css?bfd0","webpack:///./src/custom/popup.css","webpack:///./src/custom/style/cluster-style.tsx","webpack:///./src/custom/style/marker-style.tsx","webpack:///./src/interactions/index.tsx","webpack:///./src/interactions/double-click-zoom.tsx","webpack:///./src/interactions/drag-and-drop.tsx","webpack:///./src/interactions/drag-box.tsx","webpack:///./src/interactions/drag-pan.tsx","webpack:///./src/interactions/drag-rotate.tsx","webpack:///./src/interactions/drag-rotate-and-zoom.tsx","webpack:///./src/interactions/drag-zoom.tsx","webpack:///./src/interactions/draw.tsx","webpack:///./src/interactions/extent.tsx","webpack:///./src/interactions/interactions.tsx","webpack:///./src/interactions/keyboard-pan.tsx","webpack:///./src/interactions/keyboard-zoom.tsx","webpack:///./src/interactions/modify.tsx","webpack:///./src/interactions/mouse-wheel-zoom.tsx","webpack:///./src/interactions/pinch-rotate.tsx","webpack:///./src/interactions/pinch-zoom.tsx","webpack:///./src/interactions/pointer.tsx","webpack:///./src/interactions/select.tsx","webpack:///./src/interactions/snap.tsx","webpack:///./src/interactions/translate.tsx","webpack:///./src/layers/index.tsx","webpack:///./src/layers/heatmap.tsx","webpack:///./src/layers/image.tsx","webpack:///./src/layers/layers.tsx","webpack:///./src/layers/tile.tsx","webpack:///./src/layers/vector.tsx","webpack:///./src/overlays/index.tsx","webpack:///./src/overlays/overlay.tsx","webpack:///./src/overlays/overlays.tsx"],"names":["root","factory","exports","module","define","amd","a","i","window","webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","oldJsonpFunction","slice","getOptions","defaultOpts","props","options","keys","forEach","undefined","match","getPropsKey","eventName","replace","$1","toUpperCase","getEvents","events","prop2EventMap","ret","propName","prop","cloneStyle","obj","type","toString","toLowerCase","typeOf","clone","findChild","children","childType","found","React","Children","toArray","child","isValidElement","MapContext","createContext","layers","interactions","controls","overlays","pixelRatio","keyboardEventTarget","view","center","zoom","mapDiv","createRef","componentDidMount","this","controlsCmp","interactionsCmp","Controls","defaults","extend","Interactions","map","target","setTarget","current","updateFromProps","mapRef","olEvents","on","console","log","componentWillReceiveProps","nextProps","componentDidUpdate","render","Provider","className","ref","tabIndex","componentWillUnmount","isMounting","updateCenterAndResolutionFromProps","getView","setCenter","setZoom","resolution","setResolution","Component","MapReact","control","custom","interaction","layer","Layers","Overlay","Overlays","Util","ScaleLineReact","AttributionReact","FullScreenReact","MousePositionReact","OverviewMapReact","RotateReact","ZoomSliderReact","ZoomToExtentReact","ZoomReact","collapsible","collapsed","tipLabel","label","collapseLabel","change","propertychange","context","controlRef","contextType","content","transform","locals","attribution","attributionOptions","rotate","rotateOptions","zoomOptions","labelActive","source","coordinateFormat","projection","undefinedHTML","duration","autoHide","resetNorth","minWidth","units","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","delta","extent","style","MarkerStyle","ClusterStyle","Popup","GoogleStreetViewPanorama","height","initialize","GoogleMapsLoader","load","google","streetView","maps","StreetViewPanorama","ReactDOM","findDOMNode","defaultProps","position","lat","lng","pov","heading","pitch","containerEl","contentEl","contentClose","addEventListener","display","role","href","setContents","html","innerHTML","show","bottomDistance","bottom","vectorSource","vectorStyleFunction","feature","currentResolution","calculateClusterInfo","size","image","radius","fill","color","Math","min","maxFeatureCount","text","stroke","width","originalFeature","createClusterStyle","selectStyleFunction","invisibleFill","styles","originalFeatures","features","getFeatures","jj","createEmpty","getGeometry","getExtent","max","getWidth","getHeight","set","clusterFill","clusterStroke","parseFloat","substr","geometry","radius1","radius2","points","angle","PI","src","anchor","DoubleClickZoomReact","DragAndDropReact","DragBoxReact","DragPanReact","DragRotateReact","DragRotateAndZoomReact","DragZoomReact","DrawReact","ExtentReact","KeyboardPanReact","KeyboardZoomReact","ModifyReact","MouseWheelZoomReact","PinchRotateReact","PinchZoomReact","PointerReact","SelectReact","SnapReact","TranslateReact","initInteraction","removeInteraction","addInteraction","interactionRef","active","setActive","formatConstructors","condition","boxEndCondition","kinetic","out","clickTolerance","snapTolerance","POINT","maxPoints","minPoints","finishCondition","geometryFunction","geometryName","freehand","freehandCondition","wrapX","boxStyle","pixelTolerance","pointerStyle","pixelDelta","deleteCondition","timeout","useAnchor","threshold","handleDownEvent","handleDragEvent","handleEvent","handleMoveEvent","handleUpEvent","addCondition","removeCondition","toggleCondition","multi","filter","hitTolerance","instance","edge","vertex","HeatmapReact","ImageReact","TileReact","Vector","Heatmap","Image","weight","zIndex","setZIndex","layerRef","option","newVal","setGradient","setRadius","setBlur","setExtent","setMinResolution","setMaxResolution","setOpacity","setSource","setVisible","oldEvents","newEvents","un","removeLayer","opacity","attributions","url","code","imageExtent","visible","minResolution","maxResolution","setPreload","setUseInterimTilesOnError","setStyle","id","element","offset","stopEvent","insertFirst","autoPan","autoPanAnimation","autoPanMargin","querySelector","overlay","overlayRef"],"mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,IAPxE,CASGC,QAAQ,WACX,O,YCTE,SAASC,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHH,EAAI,EAAGS,EAAW,GACpCT,EAAIM,EAASI,OAAQV,IACzBK,EAAUC,EAASN,GAChBW,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBV,IAAYU,EAAgBV,IACpFI,EAASO,KAAKD,EAAgBV,GAAS,IAExCU,EAAgBV,GAAW,EAE5B,IAAID,KAAYG,EACZI,OAAOC,UAAUC,eAAeC,KAAKP,EAAaH,KACpDa,EAAQb,GAAYG,EAAYH,IAKlC,IAFGc,GAAqBA,EAAoBf,GAEtCM,EAASC,QACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBZ,GAAkB,IAGvDc,IAER,SAASA,IAER,IADA,IAAIC,EACIvB,EAAI,EAAGA,EAAIoB,EAAgBV,OAAQV,IAAK,CAG/C,IAFA,IAAIwB,EAAiBJ,EAAgBpB,GACjCyB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAO5B,IAAK,GAC5BuB,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrBiB,EAAG,GAGAZ,EAAkB,GAGtB,SAASS,EAAoBzB,GAG5B,GAAG2B,EAAiB3B,GACnB,OAAO2B,EAAiB3B,GAAUT,QAGnC,IAAIC,EAASmC,EAAiB3B,GAAY,CACzCJ,EAAGI,EACH6B,GAAG,EACHtC,QAAS,IAUV,OANAsB,EAAQb,GAAUU,KAAKlB,EAAOD,QAASC,EAAQA,EAAOD,QAASkC,GAG/DjC,EAAOqC,GAAI,EAGJrC,EAAOD,QAKfkC,EAAoBK,EAAIjB,EAGxBY,EAAoBM,EAAIJ,EAGxBF,EAAoBO,EAAI,SAASzC,EAAS0C,EAAMC,GAC3CT,EAAoBU,EAAE5C,EAAS0C,IAClC1B,OAAO6B,eAAe7C,EAAS0C,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhET,EAAoBc,EAAI,SAAShD,GACX,oBAAXiD,QAA0BA,OAAOC,aAC1ClC,OAAO6B,eAAe7C,EAASiD,OAAOC,YAAa,CAAEC,MAAO,WAE7DnC,OAAO6B,eAAe7C,EAAS,aAAc,CAAEmD,OAAO,KAQvDjB,EAAoBkB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQjB,EAAoBiB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKvC,OAAOwC,OAAO,MAGvB,GAFAtB,EAAoBc,EAAEO,GACtBvC,OAAO6B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOjB,EAAoBO,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRrB,EAAoByB,EAAI,SAAS1D,GAChC,IAAI0C,EAAS1C,GAAUA,EAAOqD,WAC7B,WAAwB,OAAOrD,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAiC,EAAoBO,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRT,EAAoBU,EAAI,SAASgB,EAAQC,GAAY,OAAO7C,OAAOC,UAAUC,eAAeC,KAAKyC,EAAQC,IAGzG3B,EAAoB4B,EAAI,GAExB,IAAIC,EAAazD,OAAqB,aAAIA,OAAqB,cAAK,GAChE0D,EAAmBD,EAAW1C,KAAKqC,KAAKK,GAC5CA,EAAW1C,KAAOd,EAClBwD,EAAaA,EAAWE,QACxB,IAAI,IAAI5D,EAAI,EAAGA,EAAI0D,EAAWhD,OAAQV,IAAKE,EAAqBwD,EAAW1D,IAC3E,IAAIkB,EAAsByC,EAM1B,OAFAvC,EAAgBJ,KAAK,CAAC,IAAI,IAEnBM,I,yUCvJT,YAmBa,EAAAuC,WAAa,SAAOC,EAAgBC,GAC7C,IAAMC,EAAO,KAAWF,GAWxB,OAVAnD,OAAOsD,KAAKF,GAAOG,SAAQ,SAACd,GAEhB,aAARA,QACkBe,IAAfJ,EAAMX,IACLA,EAAIgB,MAAM,cAEdJ,EAAQZ,GAAOW,EAAMX,OAIlBY,GASE,EAAAK,YAAc,SAACC,GAM1B,MAAO,KAL4BA,EAChCC,QAAQ,cAAc,SAACC,GAAe,OAAAA,EAAGC,iBACzCF,QAAQ,UAAU,SAACC,GAAe,OAAAA,EAAGC,iBACrCF,QAAQ,IAAI,KAWJ,EAAAG,UAAY,SAAqCC,EAAWZ,GACvE,IAAMa,EAA4B,GAClCjE,OAAOsD,KAAKU,GAAQT,SAAQ,SAACd,GAC3BwB,EAAc,EAAAP,YAAYjB,IAAQA,KAGpC,IAAMyB,EAAkB,GASxB,OARAlE,OAAOsD,KAAKF,GAAOG,SAAQ,SAACY,GAC1B,IAAMR,EAAYM,EAAcE,GAC1BC,EAAOhB,EAAMe,QACNX,IAATY,GAAsBD,EAASV,MAAM,aAAeE,IACtDO,EAAIP,GAAaS,MAIdF,GAUI,EAAAG,WAAa,SAACC,GACzB,IAAMC,EARO,SAACD,GAAY,SAAKE,SAASrE,KAAKmE,GAAKb,MAAM,iBAAiB,GAAGgB,cAQ/DC,CAAOJ,GACpB,GAAa,WAATC,GAA8B,UAATA,EAAkB,CACzC,GAAID,EAAIK,MACN,OAAOL,EAAIK,QAIb,IAAM,EAAiB,UAATJ,EAAmB,GAAK,GAKtC,OAJAvE,OAAOsD,KAAKgB,GAAKf,SAAQ,SAACd,GACxB,EAAMA,GAAO,EAAA4B,WAAWC,EAAI7B,OAGvB,EAGT,OAAO6B,GASI,EAAAM,UAAY,SAAmCC,EAA2BC,GAGrF,IAFA,IAAIC,EAEgB,MADAC,EAAMC,SAASC,QAAQL,GACvB,eAAa,CAA5B,IAAMM,EAAK,KACd,GAAIH,EAAMI,eAAeD,GAAQ,CAC/B,GAA0B,iBAAfA,EAAMZ,MAAqBY,EAAMZ,OAASO,EAAU,CAC7DC,EAAQI,EACR,MACK,GAA0B,mBAAfA,EAAMZ,MAAuBY,EAAMZ,KAAK7C,OAASoD,EAAW,CAC5EC,EAAQI,EACR,QAKN,OAAOJ,GAGT,UAAe,CACb7B,WAAU,aACVa,UAAS,YACTM,WAAU,aACVO,UAAS,c,8ZC/HX,YAEA,SAEA,SAGA,SAEA,SAMA,QAKA,OACA,OAGa,EAAAS,WAAaL,EAAMM,mBAA8B9B,GA2D9D,kBAuCE,WAAYJ,GAAZ,MACE,YAAMA,IAAM,K,OAnCP,EAAAmC,OAAkB,GAClB,EAAAC,aAA8B,GAC9B,EAAAC,SAAsB,GACtB,EAAAC,SAAsB,GAEtB,EAAArC,QAAsB,CAC3BsC,gBAAYnC,EACZoC,yBAAqBpC,EACrBqC,KAAM,IAAI,UAAK,CAAEC,OAAQ,CAAC,EAAG,GAAIC,KAAM,IACvCN,cAAUjC,EACVgC,kBAAchC,EACd+B,YAAQ/B,EACRkC,cAAUlC,GAGL,EAAAQ,OAAoB,CACzB,YAAUR,EACV,yBAAqBA,EACrB,mBAAeA,EACf,qBAAiBA,EACjB,mBAAeA,EACf,WAASA,EACT,cAAYA,EACZ,eAAaA,EACb,aAAWA,EACX,iBAAeA,EACf,iBAAeA,EACf,iBAAeA,EACf,gBAAcA,EACd,gBAAcA,EACd,oBAAkBA,EAClB,iBAAeA,GAKf,EAAKwC,OAAShB,EAAMiB,Y,EAoFxB,OA7H8B,OA4CrB,YAAAC,kBAAP,sBACQ7C,EAAU,UAAKH,WAAiCiD,KAAK9C,QAAS8C,KAAK/C,QACrEC,EAAQwC,MAAUxC,EAAQwC,gBAAgB,YAC5CxC,EAAQwC,KAAO,IAAI,UAAKxC,EAAQwC,OAGlC,IAAMO,EAAc,UAAKxB,UAA6CuB,KAAK/C,MAAMyB,SAAU,YACrFwB,EAAkB,UAAKzB,UAAiDuB,KAAK/C,MAAMyB,SAAU,gBAEnGxB,EAAQoC,SAAWa,EAASC,SAASH,EAAcA,EAAYhD,MAAQ,IAAIoD,OAAOL,KAAKV,UACvFpC,EAAQmC,aAAeiB,EAAaF,SAASF,EAAkBA,EAAgBjD,MAAQ,IAAIoD,OAAOL,KAAKX,cAEvGnC,EAAQkC,OAASY,KAAKZ,OACtBlC,EAAQqC,SAAWS,KAAKT,SACxBS,KAAKO,IAAM,IAAI,UAAIrD,GACf8C,KAAK/C,MAAMuD,OACbR,KAAKO,IAAIE,UAAUT,KAAK/C,MAAMuD,QACrBR,KAAKH,OAAOa,SACrBV,KAAKO,IAAIE,UAAUT,KAAKH,OAAOa,SAEjCV,KAAKW,gBAAgBX,KAAK/C,OAA0B,GAEhD+C,KAAK/C,MAAM2D,QAAQZ,KAAK/C,MAAM2D,OAAOZ,KAAKO,KAG9C,IAAMM,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK+C,IAAIO,GAAGtD,EAAWqD,EAASrD,OAGlCuD,QAAQC,IAAIhB,KAAKO,MAGZ,YAAAU,0BAAP,SAAiCC,GAC/BlB,KAAKW,gBAAgBO,GAAW,IAG3B,YAAAC,mBAAP,WACMnB,KAAKO,KAAOP,KAAKH,OAAOa,SAC1BV,KAAKO,IAAIE,UAAUT,KAAKH,OAAOa,UAI5B,YAAAU,OAAP,WACE,OACE,gBAAC,EAAAlC,WAAWmC,SAAQ,CAACrF,MAAOgE,MAC1B,uBACEsB,UAAYtB,KAAK/C,MAAMqE,WAAa,iBACpCC,IAAKvB,KAAKH,OACV2B,SAAU,GAETxB,KAAK/C,MAAMyB,YAOb,YAAA+C,qBAAP,aAIQ,YAAAd,gBAAR,SAAwB1D,EAAiByE,IACnCA,GAAczE,EAAMyC,OAKtBM,KAAK2B,mCAAmC1E,IAIpC,YAAA0E,mCAAR,SAA2C1E,GACzC,IAAMyC,EAAOM,KAAKO,IAAIqB,WAElB3E,EAAMyC,MAAUzC,EAAMyC,gBAAgB,iBACdrC,IAAtBJ,EAAMyC,KAAKC,QAAsBD,EAAKmC,UAAU5E,EAAMyC,KAAKC,aACvCtC,IAApBJ,EAAMyC,KAAKE,MAAoBF,EAAKoC,QAAQ7E,EAAMyC,KAAKE,WAC7BvC,IAA1BJ,EAAMyC,KAAKqC,YAA0BrC,EAAKsC,cAAc/E,EAAMyC,KAAKqC,cAG7E,EA7HA,CAA8BlD,EAAMoD,WAAvB,EAAAC,Y,qNCnFb,aAmBE,EAAAC,QAnBO,EAAAA,QAcP,EAAAhC,SAdgB,EAAAA,SAClB,aAiBE,EAAAiC,OAjBO,EAAAA,OACT,aAkBE,EAAAC,YAlBO,EAAAA,YASP,EAAA/B,aAToB,EAAAA,aACtB,aAcE,EAAAgC,MAdO,EAAAA,MASP,EAAAC,OATc,EAAAA,OAChB,aAqBE,EAAAC,QArBO,EAAAA,QASP,EAAAC,SATgB,EAAAA,SAElB,YAiBE,EAAAP,SAjBO,EAAAA,SAkBP,EAAAhD,WAlBiB,EAAAA,WACnB,YAoBE,EAAAwD,KApBK,W,8ECPP,aACA,SA4BE,EAAAvC,SA5BO,EAAAA,SACT,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SAOMgC,EAAU,CACdQ,eAAc,iBACdC,iBAAgB,mBAChBC,gBAAe,kBACfC,mBAAkB,qBAClBC,iBAAgB,mBAChBC,YAAW,cACXC,gBAAe,kBACfC,kBAAiB,oBACjBC,UAAS,aAKT,EAAAhB,W,8ZC9BF,YAEA,SAGA,QACA,QAWA,yE,OAKS,EAAAjF,QAAmB,CACxBoE,eAAWjE,EACXmD,YAAQnD,EACR+F,iBAAa/F,EACbgG,eAAWhG,EACXiG,cAAUjG,EACVkG,WAAOlG,EACPmG,mBAAenG,EACf+D,YAAQ/D,GAGH,EAAAQ,OAA4B,CACjC4F,YAAQpG,EACRqG,oBAAgBrG,G,EAkBpB,OApCsC,OAqB7B,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAsCiD,KAAK9C,QAAS8C,KAAK/C,OAC9E+C,KAAKmC,QAAU,IAAI,UAAYjF,GAC/B8C,KAAK2D,QAAQrE,SAASpF,KAAK8F,KAAKmC,SAE5BnC,KAAK/C,MAAM2G,YAAY5D,KAAK/C,MAAM2G,WAAW5D,KAAKmC,SAEtD,IAAMtB,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK2E,QAAQrB,GAAGtD,EAAWqD,EAASrD,QA/B1B,EAAAqG,YAA6C,EAAA3E,WAmC7D,EApCA,CAAsCL,EAAMoD,WAA/B,EAAAW,oB,iBChBb,IAAIkB,EAAU,EAAQ,KAEA,iBAAZA,IAAsBA,EAAU,CAAC,CAAChL,EAAOI,EAAI4K,EAAS,MAOhE,IAAI5G,EAAU,CAAC,KAAM,EAErB,eAPI6G,EAQJ,gBAAqB1G,GAER,EAAQ,IAAR,CAA0DyG,EAAS5G,GAE7E4G,EAAQE,SAAQlL,EAAOD,QAAUiL,EAAQE,S,iBCjBlClL,EAAOD,QAAU,EAAQ,IAAR,EAA0D,IAE7EqB,KAAK,CAACpB,EAAOI,EAAI,gFAAiF,M,iaCF1G,YAEA,QAeA,cAUE,WAAY+D,GAAZ,MACE,YAAMA,IAAM,K,OAVP,EAAAC,QAAyB,CAC9B+G,iBAAa5G,EACb6G,wBAAoB7G,EACpB8G,YAAQ9G,EACR+G,mBAAe/G,EACfuC,UAAMvC,EACNgH,iBAAahH,GAKb,EAAKH,QAAU,UAAKH,WAAyC,EAAKG,QAAS,EAAKD,O,EAMpF,OAlB8B,OAerB,YAAAmE,OAAP,WACE,OAAQ,2BAAMpB,KAAK/C,MAAMyB,WAE7B,EAlBA,CAA8BG,EAAMoD,WAAvB,EAAA9B,Y,8ZCjBb,YAEA,SAGA,QACA,QAYA,yE,OAKS,EAAAjD,QAAmB,CACxBoE,eAAWjE,EACXkG,WAAOlG,EACPiH,iBAAajH,EACbiG,cAAUjG,EACVF,UAAME,EACNmD,YAAQnD,EACRkH,YAAQlH,GAGH,EAAAQ,OAA2B,CAChC,YAAUR,EACV,oBAAkBA,G,EAkBtB,OAnCqC,OAoB5B,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAqCiD,KAAK9C,QAAS8C,KAAK/C,OAC7E+C,KAAKmC,QAAU,IAAI,UAAWjF,GAC9B8C,KAAK2D,QAAQrE,SAASpF,KAAK8F,KAAKmC,SAE5BnC,KAAK/C,MAAM2G,YAAY5D,KAAK/C,MAAM2G,WAAW5D,KAAKmC,SAEtD,IAAMtB,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK2E,QAAQrB,GAAGtD,EAAWqD,EAASrD,QA9B1B,EAAAqG,YAA6C,EAAA3E,WAkC7D,EAnCA,CAAqCL,EAAMoD,WAA9B,EAAAY,mB,8ZClBb,YAEA,SAGA,QAEA,QAgBA,yE,OAKS,EAAA3F,QAAmB,CACxBoE,eAAWjE,EACXmH,sBAAkBnH,EAClBoH,gBAAYpH,EACZ+D,YAAQ/D,EACRmD,YAAQnD,EACRqH,mBAAerH,GAGV,EAAAQ,OAA8B,CACnC,YAAUR,EACV,+BAA2BA,EAC3B,yBAAqBA,EACrB,oBAAkBA,G,EAkBtB,OApCwC,OAqB/B,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAwCiD,KAAK9C,QAAS8C,KAAK/C,OAChF+C,KAAKmC,QAAU,IAAI,UAAcjF,GACjC8C,KAAK2D,QAAQrE,SAASpF,KAAK8F,KAAKmC,SAE5BnC,KAAK/C,MAAM2G,YAAY5D,KAAK/C,MAAM2G,WAAW5D,KAAKmC,SAGtD,IAAMtB,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK2E,QAAQrB,GAAGtD,EAAWqD,EAASrD,QAhC1B,EAAAqG,YAA6C,EAAA3E,WAmC7D,EApCA,CAAwCL,EAAMoD,WAAjC,EAAAa,sB,8ZCvBb,YAEA,SAGA,QACA,QAYA,yE,OAKS,EAAA5F,QAAmB,CACxBmG,eAAWhG,EACXmG,mBAAenG,EACf+F,iBAAa/F,EACbkG,WAAOlG,EACP+B,YAAQ/B,EACR+D,YAAQ/D,EACRmD,YAAQnD,EACRiG,cAAUjG,EACVqC,UAAMrC,GAGD,EAAAQ,OAA4B,CACjC,YAAUR,EACV,oBAAkBA,G,EAkBtB,OArCsC,OAsB7B,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAsCiD,KAAK9C,QAAS8C,KAAK/C,OAC9E+C,KAAKmC,QAAU,IAAI,UAAYjF,GAC/B8C,KAAK2D,QAAQrE,SAASpF,KAAK8F,KAAKmC,SAE5BnC,KAAK/C,MAAM2G,YAAY5D,KAAK/C,MAAM2G,WAAW5D,KAAKmC,SAEtD,IAAMtB,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK2E,QAAQrB,GAAGtD,EAAWqD,EAASrD,QAhC1B,EAAAqG,YAA6C,EAAA3E,WAoC7D,EArCA,CAAsCL,EAAMoD,WAA/B,EAAAc,oB,8ZClBb,YAEA,SAGA,QACA,QAYA,yE,OAKS,EAAA7F,QAAmB,CACxBoE,eAAWjE,EACXkG,WAAOlG,EACPiG,cAAUjG,EACVsH,cAAUtH,EACVuH,cAAUvH,EACV+D,YAAQ/D,EACRwH,gBAAYxH,EACZmD,YAAQnD,GAGH,EAAAQ,OAAuB,CAC5B,YAAUR,EACV,oBAAkBA,G,EAkBtB,OApCiC,OAqBxB,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAiCiD,KAAK9C,QAAS8C,KAAK/C,OACzE+C,KAAKmC,QAAU,IAAI,UAAOjF,GAC1B8C,KAAK2D,QAAQrE,SAASpF,KAAK8F,KAAKmC,SAE5BnC,KAAK/C,MAAM2G,YAAY5D,KAAK/C,MAAM2G,WAAW5D,KAAKmC,SAEtD,IAAMtB,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK2E,QAAQrB,GAAGtD,EAAWqD,EAASrD,QA/B1B,EAAAqG,YAA6C,EAAA3E,WAmC7D,EApCA,CAAiCL,EAAMoD,WAA1B,EAAAe,e,8ZClBb,YAEA,SAGA,QACA,QAcA,yE,OAKS,EAAA9F,QAAmB,CACxBoE,eAAWjE,EACXyH,cAAUzH,EACV+D,YAAQ/D,EACRmD,YAAQnD,EACR0H,WAAO1H,GAGF,EAAAQ,OAA0B,CAC/B,YAAUR,EACV,oBAAgBA,EAChB,oBAAkBA,G,EAkBtB,OAlCoC,OAmB3B,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAoCiD,KAAK9C,QAAS8C,KAAK/C,OAC5E+C,KAAKmC,QAAU,IAAI,UAAUjF,GAC7B8C,KAAK2D,QAAQrE,SAASpF,KAAK8F,KAAKmC,SAE5BnC,KAAK/C,MAAM2G,YAAY5D,KAAK/C,MAAM2G,WAAW5D,KAAKmC,SAEtD,IAAMtB,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK2E,QAAQrB,GAAGtD,EAAWqD,EAASrD,QA7B1B,EAAAqG,YAA6C,EAAA3E,WAiC7D,EAlCA,CAAoCL,EAAMoD,WAA7B,EAAAU,kB,8ZCpBb,YAEA,SAGA,QACA,QAaA,yE,OAKS,EAAAzF,QAAmB,CACxByH,cAAUtH,EACViE,eAAWjE,EACX2H,iBAAa3H,EACb4H,kBAAc5H,EACd6H,oBAAgB7H,EAChB8H,qBAAiB9H,EACjB+H,WAAO/H,GAGF,EAAAQ,OAA0B,CAC/B,YAAUR,EACV,oBAAkBA,G,EAiBtB,OAlC+B,OAoBtB,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAA+BiD,KAAK9C,QAAS8C,KAAK/C,OACvE+C,KAAKmC,QAAU,IAAI,UAAKjF,GACxB8C,KAAK2D,QAAQrE,SAASpF,KAAK8F,KAAKmC,SAE5BnC,KAAK/C,MAAM2G,YAAY5D,KAAK/C,MAAM2G,WAAW5D,KAAKmC,SAEtD,IAAMtB,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK2E,QAAQrB,GAAGtD,EAAWqD,EAASrD,QA9B1B,EAAAqG,YAA6C,EAAA3E,WAiC7D,EAlCA,CAA+BL,EAAMoD,WAAxB,EAAAkB,a,8ZCnBb,YAEA,SAGA,QACA,QAYA,yE,OAKS,EAAAjG,QAAmB,CACxByH,cAAUtH,EACViE,eAAWjE,EACX+D,YAAQ/D,GAGH,EAAAQ,OAA2B,CAChC,YAAUR,EACV,oBAAkBA,G,EAkBtB,OA/BqC,OAgB5B,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAqCiD,KAAK9C,QAAS8C,KAAK/C,OAC7E+C,KAAKmC,QAAU,IAAI,UAAWjF,GAC9B8C,KAAK2D,QAAQrE,SAASpF,KAAK8F,KAAKmC,SAE5BnC,KAAK/C,MAAM2G,YAAY5D,KAAK/C,MAAM2G,WAAW5D,KAAKmC,SAEtD,IAAMtB,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK2E,QAAQrB,GAAGtD,EAAWqD,EAASrD,QA1B1B,EAAAqG,YAA6C,EAAA3E,WA8B7D,EA/BA,CAAqCL,EAAMoD,WAA9B,EAAAgB,mB,8ZClBb,YAEA,SAGA,QACA,QAYA,yE,OAKS,EAAA/F,QAAmB,CACxBoE,eAAWjE,EACXmD,YAAQnD,EACRkG,WAAOlG,EACPiG,cAAUjG,EACVgI,YAAQhI,GAGH,EAAAQ,OAA6B,CAClC,YAAUR,EACV,oBAAkBA,G,EAiBtB,OAhCuC,OAkB9B,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAuCiD,KAAK9C,QAAS8C,KAAK/C,OAC/E+C,KAAKmC,QAAU,IAAI,UAAajF,GAChC8C,KAAK2D,QAAQrE,SAASpF,KAAK8F,KAAKmC,SAE5BnC,KAAK/C,MAAM2G,YAAY5D,KAAK/C,MAAM2G,WAAW5D,KAAKmC,SAEtD,IAAMtB,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK2E,QAAQrB,GAAGtD,EAAWqD,EAASrD,QA5B1B,EAAAqG,YAA6C,EAAA3E,WA+B7D,EAhCA,CAAuCL,EAAMoD,WAAhC,EAAAiB,qB,8EClBb,aACA,SACA,SAKMd,EAAS,CACbkD,MAAO,CACLC,YANJ,OAMiBA,YACbC,aAAc,EAAAA,cAEhBrD,QAAS,GAITsD,MAAO,EAAAA,MACPC,yBAA0B,EAAAA,0BAGpB,EAAAtD,U,8ZCpBR,aACA,QACA,SASA,2B,+CA6BA,OA7B8C,OASrC,YAAAhB,OAAP,WACE,OAAQ,uBAAKkE,MAAO,CAAEK,OAAQ,WAGzB,YAAAC,WAAP,sBACEC,EAAiBC,MAAK,SAACC,GACrB,EAAKC,WAAa,IAAID,EAAOE,KAAKC,mBAChCC,EAASC,YAAY,GACrB,EAAKnJ,WAKJ,YAAA8C,kBAAP,WACEC,KAAK4F,cAGA,YAAAzE,mBAAP,WACEnB,KAAK4F,cAzBO,EAAAS,aAA8C,CACxDC,SAAU,CAAEC,IAAK,WAAYC,IAAK,YAClCC,IAAK,CAAEC,QAAS,EAAGC,MAAO,GAC1B/G,KAAM,GAwBZ,EA7BA,CAA8Cf,EAAMoD,WAAvC,EAAAyD,4B,maCXb,YAEA,OAEA,kBAKE,WAAYzI,GAAZ,MACE,YAAMA,IAAM,K,OACZ,EAAK2J,YAAc/H,EAAMiB,YACzB,EAAK+G,UAAYhI,EAAMiB,YACvB,EAAKgH,aAAejI,EAAMiB,Y,EAuC9B,OAhD2B,OAYlB,YAAAC,kBAAP,sBACMC,KAAK8G,aAAapG,SACpBV,KAAK8G,aAAapG,QAAQqG,iBAAiB,SAAS,WAC9C,EAAKH,YAAYlG,UACnB,EAAKkG,YAAYlG,QAAQ4E,MAAM0B,QAAU,YAM1C,YAAA5F,OAAP,WACE,OACE,uBAAKE,UAAU,UAAUC,IAAKvB,KAAK4G,aACjC,qBACEtF,UAAU,gBAAgB2F,KAAK,SAC/BC,KAAK,qBACL3F,IAAKvB,KAAK8G,eAEZ,uBAAKxF,UAAU,kBAAkBC,IAAKvB,KAAK6G,cAK1C,YAAAM,YAAP,SAAmBC,GACbpH,KAAK6G,UAAUnG,UAEjBV,KAAK6G,UAAUnG,QAAQ2G,UAAYD,IAIhC,YAAAE,KAAP,SAAYC,QAAA,IAAAA,MAAA,QACNvH,KAAK4G,YAAYlG,UACnBV,KAAK4G,YAAYlG,QAAQ4E,MAAMkC,OAASD,EACxCvH,KAAK4G,YAAYlG,QAAQ4E,MAAM0B,QAAU,UAG/C,EAhDA,CAA2BnI,EAAMoD,WAApB,EAAAwD,S,gBCHb,IAAI3B,EAAU,EAAQ,KAEA,iBAAZA,IAAsBA,EAAU,CAAC,CAAChL,EAAOI,EAAI4K,EAAS,MAOhE,IAAI5G,EAAU,CAAC,KAAM,EAErB,eAPI6G,EAQJ,gBAAqB1G,GAER,EAAQ,IAAR,CAA6DyG,EAAS5G,GAEhF4G,EAAQE,SAAQlL,EAAOD,QAAUiL,EAAQE,S,iBCjBlClL,EAAOD,QAAU,EAAQ,IAAR,EAA6D,IAEhFqB,KAAK,CAACpB,EAAOI,EAAI,64BAAk5B,M,8ECF36B,WAGA,SACA,QACA,SACA,QACA,QACA,SAEA,aAME,WAAYuO,GAAZ,WAIO,KAAAC,oBAAsB,SAACC,EAAkB5F,GAK9C,IAAIuD,EAJAvD,IAAe,EAAK6F,oBACtB,EAAKC,qBAAqB9F,GAC1B,EAAK6F,kBAAoB7F,GAG3B,IAAM+F,EAAOH,EAAQ/L,IAAI,YAAYhC,OACrC,GAAIkO,EAAO,EACTxC,EAAQ,IAAI,UAAM,CAChByC,MAAO,IAAI,UAAY,CACrBC,OAAQL,EAAQ/L,IAAI,UACpBqM,KAAM,IAAI,UAAU,CAClBC,MAAO,CAAC,IAAK,IAAK,EAAGC,KAAKC,IAAI,GAAMN,EAAO,EAAKO,gBAAmB,SAGvEC,KAAM,IAAI,UAAU,CAClBA,KAAMR,EAAKzJ,WACX4J,KAAM,IAAI,UAAU,CAAEC,MAAO,SAC7BK,OAAQ,IAAI,UAAY,CAAEL,MAAO,qBAAsBM,MAAO,YAG7D,CACL,IAAMC,EAAkBd,EAAQ/L,IAAI,YAAY,GAChD0J,EAAQ,EAAKoD,mBAAmBD,GAGlC,OAAOnD,GAGF,KAAAqD,oBAAsB,SAAChB,GAW5B,IAVA,IAQIc,EAREG,EAAgB,IAAI,UAAU,CAAEV,MAAO,8BACvCW,EAAS,CAAC,IAAI,UAAM,CACxBd,MAAO,IAAI,UAAY,CACrBC,OAAQL,EAAQ/L,IAAI,UACpBqM,KAAMW,OAGJE,EAAmBnB,EAAQ/L,IAAI,YAG5B1C,EAAI4P,EAAiBlP,OAAS,EAAGV,GAAK,EAAGA,GAAQ,EACxDuP,EAAkBK,EAAiB5P,GACnC2P,EAAO3O,KAAK,EAAKwO,mBAAmBD,IAGtC,OAAOI,GAhDP7I,KAAKuE,OAASkD,EA+FlB,OA5CU,YAAAI,qBAAR,SAA6B9F,GAC3B/B,KAAKqI,gBAAkB,EAIvB,IAHA,IACIV,EACAK,EAFEe,EAAW/I,KAAKuE,OAAOyE,cAGpB9P,EAAI6P,EAASnP,OAAS,EAAGV,GAAK,EAAGA,GAAQ,EAAG,CAEnD,IAGI+P,EAHEH,GADNnB,EAAUoB,EAAS7P,IACc0C,IAAI,YAC/ByJ,EAAS,UAAO6D,cAClBtO,OAAC,EAGL,IAAKA,EAAI,EAAGqO,EAAKH,EAAiBlP,OAAQgB,EAAIqO,EAAIrO,GAAQ,EACxD,UAAOyF,OAAOgF,EAAQyD,EAAiBlO,GAAGuO,cAAcC,aAE1DpJ,KAAKqI,gBAAkBF,KAAKkB,IAAIrJ,KAAKqI,gBAAiBY,GACtDjB,EAAgE,KAAtD,UAAOsB,SAASjE,GAAU,UAAOkE,UAAUlE,IACjDtD,EACJ4F,EAAQ6B,IAAI,SAAUxB,KAIlB,YAAAU,mBAAR,SAA2Bf,GACzB,IAAM8B,EAAc,IAAI,UAAU,CAAEvB,MAAO,2BACrCwB,EAAgB,IAAI,UAAY,CAAExB,MAAO,yBAA0BM,MAAO,IAI1EjN,EAAOoM,EAAQ/L,IAAI,QAEnBoM,EAA2B,IADf2B,WAAWpO,EAAKqO,OAAO,IACb,GAAU,EAEtC,OAAO,IAAI,UAAM,CACfC,SAAUlC,EAAQwB,cAClBpB,MAAO,IAAI,UAAkB,CAC3B+B,QAAS9B,EACT+B,QAAS,EACTC,OAAQ,EACRC,MAAO9B,KAAK+B,GACZjC,KAAMwB,EACNlB,OAAQmB,OAIhB,EAtGA,GAAa,EAAAlE,gB,+ECVb,aACA,QAEA,EASE,SAAY2E,GARL,KAAAA,IAAc,0DAEd,KAAA7E,MAAe,IAAI,UAAM,CAC9ByC,MAAO,IAAI,UAAU,CACnBoC,IAAKnK,KAAKmK,QAUP,KAAAxB,oBAAsB,WAC3B,OAAO,IAAI,UAAM,CACfZ,MAAO,IAAI,UAAU,CACjBqC,OAAQ,CAAC,GAAK,KACdlC,MAAO,UACPiC,IAAK,8DAVPA,IACFnK,KAAKmK,IAAMA,IAXJ,EAAA5E,e,+ECHb,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAyCE,EAAAjF,aAzCO,EAAAA,aACT,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAQM+B,EAAc,CAClBgI,qBAAoB,uBACpBC,iBAAgB,mBAChBC,aAAY,eACZC,aAAY,eACZC,gBAAe,kBACfC,uBAAsB,yBACtBC,cAAa,gBACbC,UAAS,YACTC,YAAW,cACXC,iBAAgB,mBAChBC,kBAAiB,oBACjBC,YAAW,cACXC,oBAAmB,sBACnBC,iBAAgB,mBAChBC,eAAc,iBACdC,aAAY,eACZC,YAAW,cACXC,UAAS,YACTC,eAAc,kBAKd,EAAAlJ,e,8ZCnDF,YAEA,SAGA,QACA,QAcA,yE,OAKS,EAAAnF,QAAmB,CACxByH,cAAUtH,EACV+H,WAAO/H,GAGF,EAAAQ,OAAgC,CACrC,YAAUR,EACV,qBAAiBA,EACjB,oBAAkBA,G,EA0CtB,OAvD0C,OAgBjC,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAA0CiD,KAAK9C,QAAS8C,KAAK/C,OAClF+C,KAAKqC,YAAc,IAAI,UAAgBnF,GACvC8C,KAAK2D,QAAQtE,aAAanF,KAAK8F,KAAKqC,aAEpCrC,KAAKwL,gBAAgBxL,KAAK/C,OAE1B,IAAM4D,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAWqD,EAASrD,QAIrC,YAAAyD,0BAAP,SAAiCC,GAAjC,WACE,GAAIA,IAAclB,KAAK/C,MAAO,CAC5B+C,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,aACxC,IAAMnF,EAAU,UAAKH,WAA0CiD,KAAK9C,QAASgE,GAC7ElB,KAAKqC,YAAc,IAAI,UAAgBnF,GACvC8C,KAAK2D,QAAQpD,IAAImL,eAAe1L,KAAKqC,aAErCrC,KAAKwL,gBAAgBtK,GAErB,IAAM,EAAW,UAAKtD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK,GAAUC,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAW,EAASA,SAKvC,YAAAiE,qBAAP,WACEzB,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,cAGlC,YAAAmJ,gBAAR,SAAwBvO,GAClBA,EAAM0O,gBAAgB1O,EAAM0O,eAAe3L,KAAKqC,kBAC/BhF,IAAjBJ,EAAM2O,QAAsB5L,KAAKqC,YAAYwJ,UAAU5O,EAAM2O,SApDrD,EAAA/H,YAA6C,EAAA3E,WAsD7D,EAvDA,CAA0CL,EAAMoD,WAAnC,EAAAoI,wB,8ZCpBb,YAEA,SAGA,QACA,QAgBA,yE,OAKS,EAAAnN,QAAmB,CACxB4O,wBAAoBzO,EACpBoH,gBAAYpH,EACZmD,YAAQnD,GAGH,EAAAQ,OAA4B,CACjC,iBAAeR,EACf,YAAUA,EACV,qBAAiBA,EACjB,oBAAkBA,G,EA0CtB,OAzDsC,OAkB7B,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAsCiD,KAAK9C,QAAS8C,KAAK/C,OAC9E+C,KAAKqC,YAAc,IAAI,UAAYnF,GACnC8C,KAAK2D,QAAQtE,aAAanF,KAAK8F,KAAKqC,aAEpCrC,KAAKwL,gBAAgBxL,KAAK/C,OAE1B,IAAM4D,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAWqD,EAASrD,QAIrC,YAAAyD,0BAAP,SAAiCC,GAAjC,WACE,GAAIA,IAAclB,KAAK/C,MAAO,CAC5B+C,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,aACxC,IAAMnF,EAAU,UAAKH,WAAsCiD,KAAK9C,QAASgE,GACzElB,KAAKqC,YAAc,IAAI,UAAYnF,GACnC8C,KAAK2D,QAAQpD,IAAImL,eAAe1L,KAAKqC,aAErCrC,KAAKwL,gBAAgBtK,GAErB,IAAM,EAAW,UAAKtD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK,GAAUC,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAW,EAASA,SAKvC,YAAAiE,qBAAP,WACEzB,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,cAGlC,YAAAmJ,gBAAR,SAAwBvO,GAClBA,EAAM0O,gBAAgB1O,EAAM0O,eAAe3L,KAAKqC,kBAC/BhF,IAAjBJ,EAAM2O,QAAsB5L,KAAKqC,YAAYwJ,UAAU5O,EAAM2O,SAtDrD,EAAA/H,YAA6C,EAAA3E,WAwD7D,EAzDA,CAAsCL,EAAMoD,WAA/B,EAAAqI,oB,8ZCtBb,YAEA,SAGA,QACA,QAoBA,yE,OAKS,EAAApN,QAAmB,CACxBoE,eAAWjE,EACX0O,eAAW1O,EACX2O,qBAAiB3O,GAGZ,EAAAQ,OAAwB,CAC7B,aAAWR,EACX,YAAUA,EACV,cAAYA,EACZ,YAAUA,EACV,qBAAiBA,EACjB,oBAAkBA,G,EA0CtB,OA3DkC,OAoBzB,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAkCiD,KAAK9C,QAAS8C,KAAK/C,OAC1E+C,KAAKqC,YAAc,IAAI,UAAQnF,GAC/B8C,KAAK2D,QAAQtE,aAAanF,KAAK8F,KAAKqC,aAEpCrC,KAAKwL,gBAAgBxL,KAAK/C,OAE1B,IAAM4D,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAWqD,EAASrD,QAIrC,YAAAyD,0BAAP,SAAiCC,GAAjC,WACE,GAAIA,IAAclB,KAAK/C,MAAO,CAC5B+C,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,aACxC,IAAMnF,EAAU,UAAKH,WAAkCiD,KAAK9C,QAASgE,GACrElB,KAAKqC,YAAc,IAAI,UAAQnF,GAC/B8C,KAAK2D,QAAQpD,IAAImL,eAAe1L,KAAKqC,aAErCrC,KAAKwL,gBAAgBtK,GAErB,IAAM,EAAW,UAAKtD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK,GAAUC,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAW,EAASA,SAKvC,YAAAiE,qBAAP,WACEzB,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,cAGlC,YAAAmJ,gBAAR,SAAwBvO,GAClBA,EAAM0O,gBAAgB1O,EAAM0O,eAAe3L,KAAKqC,kBAC/BhF,IAAjBJ,EAAM2O,QAAsB5L,KAAKqC,YAAYwJ,UAAU5O,EAAM2O,SAxDrD,EAAA/H,YAA6C,EAAA3E,WA0D7D,EA3DA,CAAkCL,EAAMoD,WAA3B,EAAAsI,gB,8ZC1Bb,YAEA,SAGA,QACA,QAeA,yE,OAKS,EAAArN,QAAwB,CAC7B6O,eAAW1O,EACX4O,aAAS5O,GAGJ,EAAAQ,OAAwB,CAC7B,YAAUR,EACV,qBAAiBA,EACjB,oBAAkBA,G,EA6CtB,OA1DkC,OAgBzB,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAkCiD,KAAK9C,QAAS8C,KAAK/C,OAC1E+C,KAAKqC,YAAc,IAAI,UAAQnF,GAC/B8C,KAAK2D,QAAQtE,aAAanF,KAAK8F,KAAKqC,aAEpCrC,KAAKwL,gBAAgBxL,KAAK/C,OAE1B,IAAM4D,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAWqD,EAASrD,QAIrC,YAAAyD,0BAAP,SAAiCC,GAAjC,WAGE,GAFAH,QAAQC,IAAIhB,KAAK2D,QAAQpD,KAErBW,IAAclB,KAAK/C,MAAO,CAC5B+C,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,aACxC,IAAMnF,EAAU,UAAKH,WAAkCiD,KAAK9C,QAASgE,GACrElB,KAAKqC,YAAc,IAAI,UAAQnF,GAC/B8C,KAAK2D,QAAQpD,IAAImL,eAAe1L,KAAKqC,aAErCrC,KAAKwL,gBAAgBtK,GAErB,IAAM,EAAW,UAAKtD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK,GAAUC,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAW,EAASA,SAKvC,YAAAiE,qBAAP,WACEzB,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,cAGlC,YAAAmJ,gBAAR,SAAwBvO,GAClBA,EAAM0O,gBAAgB1O,EAAM0O,eAAe3L,KAAKqC,kBAC/BhF,IAAjBJ,EAAM2O,QAAsB5L,KAAKqC,YAAYwJ,UAAU5O,EAAM2O,SAtDrD,EAAA/H,YAA6C,EAAA3E,WAyD7D,EA1DA,CAAkCL,EAAMoD,WAA3B,EAAAuI,gB,8ZCrBb,YAEA,SAGA,QACA,QAcA,yE,OAKS,EAAAtN,QAA2B,CAChC6O,eAAW1O,EACXsH,cAAUtH,GAGL,EAAAQ,OAA2B,CAChC,YAAUR,EACV,qBAAiBA,EACjB,oBAAkBA,G,EA0CtB,OAvDqC,OAgB5B,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAqCiD,KAAK9C,QAAS8C,KAAK/C,OAC7E+C,KAAKqC,YAAc,IAAI,UAAWnF,GAClC8C,KAAK2D,QAAQtE,aAAanF,KAAK8F,KAAKqC,aAEpCrC,KAAKwL,gBAAgBxL,KAAK/C,OAE1B,IAAM4D,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAWqD,EAASrD,QAIrC,YAAAyD,0BAAP,SAAiCC,GAAjC,WACE,GAAIA,IAAclB,KAAK/C,MAAO,CAC5B+C,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,aACxC,IAAMnF,EAAU,UAAKH,WAAqCiD,KAAK9C,QAASgE,GACxElB,KAAKqC,YAAc,IAAI,UAAWnF,GAClC8C,KAAK2D,QAAQpD,IAAImL,eAAe1L,KAAKqC,aAErCrC,KAAKwL,gBAAgBtK,GAErB,IAAM,EAAW,UAAKtD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK,GAAUC,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAW,EAASA,SAKvC,YAAAiE,qBAAP,WACEzB,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,cAGlC,YAAAmJ,gBAAR,SAAwBvO,GAClBA,EAAM0O,gBAAgB1O,EAAM0O,eAAe3L,KAAKqC,kBAC/BhF,IAAjBJ,EAAM2O,QAAsB5L,KAAKqC,YAAYwJ,UAAU5O,EAAM2O,SApDrD,EAAA/H,YAA6C,EAAA3E,WAsD7D,EAvDA,CAAqCL,EAAMoD,WAA9B,EAAAwI,mB,8ZCpBb,YAEA,SAGA,QACA,QAaA,yE,OAKS,EAAAvN,QAAkC,CACvC6O,eAAW1O,EACXsH,cAAUtH,GAGL,EAAAQ,OAAkC,CACvC,YAAUR,EACV,qBAAiBA,EACjB,oBAAkBA,G,EA0CtB,OAvD4C,OAgBnC,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAA4CiD,KAAK9C,QAAS8C,KAAK/C,OACpF+C,KAAKqC,YAAc,IAAI,UAAkBnF,GACzC8C,KAAK2D,QAAQtE,aAAanF,KAAK8F,KAAKqC,aAEpCrC,KAAKwL,gBAAgBxL,KAAK/C,OAE1B,IAAM4D,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAWqD,EAASrD,QAIrC,YAAAyD,0BAAP,SAAiCC,GAAjC,WACE,GAAIA,IAAclB,KAAK/C,MAAO,CAC5B+C,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,aACxC,IAAMnF,EAAU,UAAKH,WAA4CiD,KAAK9C,QAASgE,GAC/ElB,KAAKqC,YAAc,IAAI,UAAkBnF,GACzC8C,KAAK2D,QAAQpD,IAAImL,eAAe1L,KAAKqC,aAErCrC,KAAKwL,gBAAgBtK,GAErB,IAAM,EAAW,UAAKtD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK,GAAUC,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAW,EAASA,SAKvC,YAAAiE,qBAAP,WACEzB,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,cAGlC,YAAAmJ,gBAAR,SAAwBvO,GAClBA,EAAM0O,gBAAgB1O,EAAM0O,eAAe3L,KAAKqC,kBAC/BhF,IAAjBJ,EAAM2O,QAAsB5L,KAAKqC,YAAYwJ,UAAU5O,EAAM2O,SApDrD,EAAA/H,YAA6C,EAAA3E,WAsD7D,EAvDA,CAA4CL,EAAMoD,WAArC,EAAAyI,0B,8ZCnBb,YAEA,SAGA,QACA,QAoBA,yE,OAKS,EAAAxN,QAAyB,CAC9BoE,eAAWjE,EACX0O,eAAW1O,EACXsH,cAAUtH,EACV6O,SAAK7O,GAGA,EAAAQ,OAAyB,CAC9B,aAAWR,EACX,YAAUA,EACV,cAAYA,EACZ,YAAUA,EACV,qBAAiBA,EACjB,oBAAkBA,G,EA2CtB,OA7DmC,OAqB1B,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAmCiD,KAAK9C,QAAS8C,KAAK/C,OAC3E+C,KAAKqC,YAAc,IAAI,UAASnF,GAChC8C,KAAK2D,QAAQtE,aAAanF,KAAK8F,KAAKqC,aAEpCrC,KAAKwL,gBAAgBxL,KAAK/C,OAE1B,IAAM4D,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAWqD,EAASrD,QAIrC,YAAAyD,0BAAP,SAAiCC,GAAjC,WACE,GAAIA,IAAclB,KAAK/C,MAAO,CAC5B+C,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,aACxC,IAAMnF,EAAU,UAAKH,WAAmCiD,KAAK9C,QAASgE,GACtElB,KAAKqC,YAAc,IAAI,UAASnF,GAChC8C,KAAK2D,QAAQpD,IAAImL,eAAe1L,KAAKqC,aAErCrC,KAAKwL,gBAAgBtK,GAErB,IAAM,EAAW,UAAKtD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK,GAAUC,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAW,EAASA,SAKvC,YAAAiE,qBAAP,WACEzB,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,cAGlC,YAAAmJ,gBAAR,SAAwBvO,GAClBA,EAAM0O,gBAAgB1O,EAAM0O,eAAe3L,KAAKqC,kBAC/BhF,IAAjBJ,EAAM2O,QAAsB5L,KAAKqC,YAAYwJ,UAAU5O,EAAM2O,SAzDrD,EAAA/H,YAA6C,EAAA3E,WA4D7D,EA7DA,CAAmCL,EAAMoD,WAA5B,EAAA0I,iB,8ZC1Bb,YAEA,SACA,OAGA,QACA,QAkBA,yE,OAKS,EAAAzN,QAAmB,CACxBiP,oBAAgB9O,EAChB0L,cAAU1L,EACVkH,YAAQlH,EACR+O,mBAAe/O,EACfe,KAAM,UAAaiO,MACnBC,eAAWjP,EACXkP,eAAWlP,EACXmP,qBAAiBnP,EACjBiI,WAAOjI,EACPoP,sBAAkBpP,EAClBqP,kBAAcrP,EACd0O,eAAW1O,EACXsP,cAAUtP,EACVuP,uBAAmBvP,EACnBwP,WAAOxP,GAGF,EAAAQ,OAAqB,CAC1B,YAAUR,EACV,qBAAiBA,EACjB,aAAWA,EACX,eAAaA,EACb,oBAAkBA,G,EA2CtB,OAvE+B,OA+BtB,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAA+BiD,KAAK9C,QAAS8C,KAAK/C,OACvE+C,KAAKqC,YAAc,IAAI,UAAKnF,GAC5B8C,KAAK2D,QAAQtE,aAAanF,KAAK8F,KAAKqC,aAEpCrC,KAAKwL,gBAAgBxL,KAAK/C,OAE1B,IAAM4D,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAWqD,EAASrD,QAIrC,YAAAyD,0BAAP,SAAiCC,GAAjC,WACE,GAAIA,IAAclB,KAAK/C,MAAO,CAC5B+C,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,aACxC,IAAMnF,EAAU,UAAKH,WAA+BiD,KAAK9C,QAASgE,GAClElB,KAAKqC,YAAc,IAAI,UAAKnF,GAC5B8C,KAAK2D,QAAQpD,IAAImL,eAAe1L,KAAKqC,aAErCrC,KAAKwL,gBAAgBtK,GAErB,IAAM,EAAW,UAAKtD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK,GAAUC,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAW,EAASA,SAKvC,YAAAiE,qBAAP,WACEzB,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,cAGlC,YAAAmJ,gBAAR,SAAwBvO,GAClBA,EAAM0O,gBAAgB1O,EAAM0O,eAAe3L,KAAKqC,kBAC/BhF,IAAjBJ,EAAM2O,QAAsB5L,KAAKqC,YAAYwJ,UAAU5O,EAAM2O,SAnErD,EAAA/H,YAA6C,EAAA3E,WAsE7D,EAvEA,CAA+BL,EAAMoD,WAAxB,EAAA2I,a,8ZCzBb,YAEA,SAGA,QACA,QAiBA,yE,OAKS,EAAA1N,QAAyB,CAC9BmI,YAAQhI,EACRyP,cAAUzP,EACV0P,oBAAgB1P,EAChB2P,kBAAc3P,EACdwP,WAAOxP,GAGF,EAAAQ,OAAuB,CAC5B,WAASR,EACT,YAAUA,EACV,qBAAiBA,EACjB,oBAAkBA,G,EA0CtB,OA3DiC,OAoBxB,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAuCiD,KAAK9C,QAAS8C,KAAK/C,OAC/E+C,KAAKqC,YAAc,IAAI,UAAOnF,GAC9B8C,KAAK2D,QAAQtE,aAAanF,KAAK8F,KAAKqC,aAEpCrC,KAAKwL,gBAAgBxL,KAAK/C,OAE1B,IAAM4D,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAWqD,EAASrD,QAIrC,YAAAyD,0BAAP,SAAiCC,GAAjC,WACE,GAAIA,IAAclB,KAAK/C,MAAO,CAC5B+C,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,aACxC,IAAMnF,EAAU,UAAKH,WAAuCiD,KAAK9C,QAASgE,GAC1ElB,KAAKqC,YAAc,IAAI,UAAOnF,GAC9B8C,KAAK2D,QAAQpD,IAAImL,eAAe1L,KAAKqC,aAErCrC,KAAKwL,gBAAgBtK,GAErB,IAAM,EAAW,UAAKtD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK,GAAUC,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAW,EAASA,SAKvC,YAAAiE,qBAAP,WACEzB,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,cAGnC,YAAAmJ,gBAAP,SAAuBvO,GACjBA,EAAM0O,gBAAgB1O,EAAM0O,eAAe3L,KAAKqC,kBAC/BhF,IAAjBJ,EAAM2O,QAAsB5L,KAAKqC,YAAYwJ,UAAU5O,EAAM2O,SAxDrD,EAAA/H,YAA6C,EAAA3E,WA0D7D,EA3DA,CAAiCL,EAAMoD,WAA1B,EAAA4I,e,8ZCvBb,YAOA,2B,+CAIA,OAJkC,OACzB,YAAAzJ,OAAP,WACE,OAAQ,2BAAMpB,KAAK/C,MAAMyB,WAE7B,EAJA,CAAkCG,EAAMoD,WAA3B,EAAA3B,gB,8ZCPb,YAEA,SAGA,QACA,QAcA,yE,OAKS,EAAApD,QAAmB,CACxB6O,eAAW1O,EACXsH,cAAUtH,EACV4P,gBAAY5P,GAGP,EAAAQ,OAA4B,CACjC,YAAUR,EACV,qBAAiBA,EACjB,oBAAkBA,G,EA0CtB,OAxDsC,OAiB7B,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAsCiD,KAAK9C,QAAS8C,KAAK/C,OAC9E+C,KAAKqC,YAAc,IAAI,UAAYnF,GACnC8C,KAAK2D,QAAQtE,aAAanF,KAAK8F,KAAKqC,aAEpCrC,KAAKwL,gBAAgBxL,KAAK/C,OAE1B,IAAM4D,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAWqD,EAASrD,QAIrC,YAAAyD,0BAAP,SAAiCC,GAAjC,WACE,GAAIA,IAAclB,KAAK/C,MAAO,CAC5B+C,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,aACxC,IAAMnF,EAAU,UAAKH,WAAsCiD,KAAK9C,QAASgE,GACzElB,KAAKqC,YAAc,IAAI,UAAYnF,GACnC8C,KAAK2D,QAAQpD,IAAImL,eAAe1L,KAAKqC,aAErCrC,KAAKwL,gBAAgBtK,GAErB,IAAM,EAAW,UAAKtD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK,GAAUC,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAW,EAASA,SAKvC,YAAAiE,qBAAP,WACEzB,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,cAGlC,YAAAmJ,gBAAR,SAAwBvO,GAClBA,EAAM0O,gBAAgB1O,EAAM0O,eAAe3L,KAAKqC,kBAC/BhF,IAAjBJ,EAAM2O,QAAsB5L,KAAKqC,YAAYwJ,UAAU5O,EAAM2O,SArDrD,EAAA/H,YAA6C,EAAA3E,WAuD7D,EAxDA,CAAsCL,EAAMoD,WAA/B,EAAA6I,oB,8ZCpBb,YAEA,SAGA,QACA,QAcA,yE,OAKS,EAAA5N,QAAmB,CACxB6O,eAAW1O,EACXsH,cAAUtH,EACV+H,WAAO/H,GAGF,EAAAQ,OAA6B,CAClC,YAAUR,EACV,qBAAiBA,EACjB,oBAAkBA,G,EA2CtB,OAzDuC,OAiB9B,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAuCiD,KAAK9C,QAAS8C,KAAK/C,OAC/E+C,KAAKqC,YAAc,IAAI,UAAanF,GACpC8C,KAAK2D,QAAQtE,aAAanF,KAAK8F,KAAKqC,aAEpCrC,KAAKwL,gBAAgBxL,KAAK/C,OAE1B,IAAM4D,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAWqD,EAASrD,QAIrC,YAAAyD,0BAAP,SAAiCC,GAAjC,WACE,GAAIA,IAAclB,KAAK/C,MAAO,CAC5B+C,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,aACxC,IAAMnF,EAAU,UAAKH,WAAuCiD,KAAK9C,QAASgE,GAC1ElB,KAAKqC,YAAc,IAAI,UAAanF,GACpC8C,KAAK2D,QAAQpD,IAAImL,eAAe1L,KAAKqC,aAErCrC,KAAKwL,gBAAgBtK,GAErB,IAAM,EAAW,UAAKtD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK,GAAUC,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAW,EAASA,SAKvC,YAAAiE,qBAAP,WACEzB,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,cAGnC,YAAAmJ,gBAAP,SAAuBvO,GACjBA,EAAM0O,gBAAgB1O,EAAM0O,eAAe3L,KAAKqC,kBAC/BhF,IAAjBJ,EAAM2O,QAAsB5L,KAAKqC,YAAYwJ,UAAU5O,EAAM2O,SArDrD,EAAA/H,YAA6C,EAAA3E,WAwD7D,EAzDA,CAAuCL,EAAMoD,WAAhC,EAAA8I,qB,8ZCpBb,YAEA,SAGA,QACA,QAkBA,yE,OAKS,EAAA7N,QAAmB,CACxB6O,eAAW1O,EACX6P,qBAAiB7P,EACjB0P,oBAAgB1P,EAChBiI,WAAOjI,EACP0L,cAAU1L,EACVwP,WAAOxP,GAGF,EAAAQ,OAAuB,CAC5B,YAAUR,EACV,qBAAiBA,EACjB,eAAaA,EACb,iBAAeA,EACf,oBAAkBA,G,EA0CtB,OA7DiC,OAsBxB,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAiCiD,KAAK9C,QAAS8C,KAAK/C,OACzE+C,KAAKqC,YAAc,IAAI,UAAOnF,GAC9B8C,KAAK2D,QAAQtE,aAAanF,KAAK8F,KAAKqC,aAEpCrC,KAAKwL,gBAAgBxL,KAAK/C,OAE1B,IAAM4D,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAWqD,EAASrD,QAIrC,YAAAyD,0BAAP,SAAiCC,GAAjC,WACE,GAAIA,IAAclB,KAAK/C,MAAO,CAC5B+C,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,aACxC,IAAMnF,EAAU,UAAKH,WAAiCiD,KAAK9C,QAASgE,GACpElB,KAAKqC,YAAc,IAAI,UAAOnF,GAC9B8C,KAAK2D,QAAQpD,IAAImL,eAAe1L,KAAKqC,aAErCrC,KAAKwL,gBAAgBtK,GAErB,IAAM,EAAW,UAAKtD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK,GAAUC,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAW,EAASA,SAKvC,YAAAiE,qBAAP,WACEzB,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,cAGlC,YAAAmJ,gBAAR,SAAwBvO,GAClBA,EAAM0O,gBAAgB1O,EAAM0O,eAAe3L,KAAKqC,kBAC/BhF,IAAjBJ,EAAM2O,QAAsB5L,KAAKqC,YAAYwJ,UAAU5O,EAAM2O,SA1DrD,EAAA/H,YAA6C,EAAA3E,WA4D7D,EA7DA,CAAiCL,EAAMoD,WAA1B,EAAA+I,e,8ZCxBb,YAEA,SAGA,QACA,QAcA,yE,OAKS,EAAA9N,QAAmB,CACxByH,cAAUtH,EACV8P,aAAS9P,EACT+P,eAAW/P,GAGN,EAAAQ,OAA+B,CACpC,YAAUR,EACV,qBAAiBA,EACjB,oBAAkBA,G,EA0CtB,OAxDyC,OAiBhC,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAyCiD,KAAK9C,QAAS8C,KAAK/C,OACjF+C,KAAKqC,YAAc,IAAI,UAAenF,GACtC8C,KAAK2D,QAAQtE,aAAanF,KAAK8F,KAAKqC,aAEpCrC,KAAKwL,gBAAgBxL,KAAK/C,OAE1B,IAAM4D,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAWqD,EAASrD,QAIrC,YAAAyD,0BAAP,SAAiCC,GAAjC,WACE,GAAIA,IAAclB,KAAK/C,MAAO,CAC5B+C,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,aACxC,IAAMnF,EAAU,UAAKH,WAAyCiD,KAAK9C,QAASgE,GAC5ElB,KAAKqC,YAAc,IAAI,UAAenF,GACtC8C,KAAK2D,QAAQpD,IAAImL,eAAe1L,KAAKqC,aAErCrC,KAAKwL,gBAAgBtK,GAErB,IAAM,EAAW,UAAKtD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK,GAAUC,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAW,EAASA,SAKvC,YAAAiE,qBAAP,WACEzB,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,cAGlC,YAAAmJ,gBAAR,SAAwBvO,GAClBA,EAAM0O,gBAAgB1O,EAAM0O,eAAe3L,KAAKqC,kBAC/BhF,IAAjBJ,EAAM2O,QAAsB5L,KAAKqC,YAAYwJ,UAAU5O,EAAM2O,SArDrD,EAAA/H,YAA6C,EAAA3E,WAuD7D,EAxDA,CAAyCL,EAAMoD,WAAlC,EAAAgJ,uB,8ZCpBb,YAEA,SAGA,QACA,QAaA,yE,OAKS,EAAA/N,QAAmB,CACxByH,cAAUtH,EACVgQ,eAAWhQ,GAGN,EAAAQ,OAA4B,CACjC,YAAUR,EACV,qBAAiBA,EACjB,oBAAkBA,G,EA0CtB,OAvDsC,OAgB7B,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAsCiD,KAAK9C,QAAS8C,KAAK/C,OAC9E+C,KAAKqC,YAAc,IAAI,UAAYnF,GACnC8C,KAAK2D,QAAQtE,aAAanF,KAAK8F,KAAKqC,aAEpCrC,KAAKwL,gBAAgBxL,KAAK/C,OAE1B,IAAM4D,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK6C,KAAKnC,QAAQT,SAAQ,SAACI,GAChC,EAAK6E,YAAYvB,GAAGtD,EAAWqD,EAASrD,QAIrC,YAAAyD,0BAAP,SAAiCC,GAAjC,WACE,GAAIA,IAAclB,KAAK/C,MAAO,CAC5B+C,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,aACxC,IAAMnF,EAAU,UAAKH,WAAsCiD,KAAK9C,QAASgE,GACzElB,KAAKqC,YAAc,IAAI,UAAYnF,GACnC8C,KAAK2D,QAAQpD,IAAImL,eAAe1L,KAAKqC,aAErCrC,KAAKwL,gBAAgBtK,GAErB,IAAM,EAAW,UAAKtD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK6C,KAAKnC,QAAQT,SAAQ,SAACI,GAChC,EAAK6E,YAAYvB,GAAGtD,EAAW,EAASA,SAKvC,YAAAiE,qBAAP,WACEzB,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,cAGlC,YAAAmJ,gBAAR,SAAwBvO,GAClBA,EAAM0O,gBAAgB1O,EAAM0O,eAAe3L,KAAKqC,kBAC/BhF,IAAjBJ,EAAM2O,QAAsB5L,KAAKqC,YAAYwJ,UAAU5O,EAAM2O,SApDrD,EAAA/H,YAA6C,EAAA3E,WAsD7D,EAvDA,CAAsCL,EAAMoD,WAA/B,EAAAiJ,oB,8ZCnBb,YAEA,SAGA,QACA,QAcA,yE,OAKS,EAAAhO,QAAmB,CACxByH,cAAUtH,GAGL,EAAAQ,OAA0B,CAC/B,YAAUR,EACV,qBAAiBA,EACjB,oBAAkBA,G,EA0CtB,OAtDoC,OAe3B,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAoCiD,KAAK9C,QAAS8C,KAAK/C,OAC5E+C,KAAKqC,YAAc,IAAI,UAAUnF,GACjC8C,KAAK2D,QAAQtE,aAAanF,KAAK8F,KAAKqC,aAEpCrC,KAAKwL,gBAAgBxL,KAAK/C,OAE1B,IAAM4D,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAWqD,EAASrD,QAIrC,YAAAyD,0BAAP,SAAiCC,GAAjC,WACE,GAAIA,IAAclB,KAAK/C,MAAO,CAC5B+C,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,aACxC,IAAMnF,EAAU,UAAKH,WAAoCiD,KAAK9C,QAASgE,GACvElB,KAAKqC,YAAc,IAAI,UAAUnF,GACjC8C,KAAK2D,QAAQpD,IAAImL,eAAe1L,KAAKqC,aAErCrC,KAAKwL,gBAAgBtK,GAErB,IAAM,EAAW,UAAKtD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK,GAAUC,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAW,EAASA,SAKvC,YAAAiE,qBAAP,WACEzB,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,cAGlC,YAAAmJ,gBAAR,SAAwBvO,GAClBA,EAAM0O,gBAAgB1O,EAAM0O,eAAe3L,KAAKqC,kBAC/BhF,IAAjBJ,EAAM2O,QAAsB5L,KAAKqC,YAAYwJ,UAAU5O,EAAM2O,SAnDrD,EAAA/H,YAA6C,EAAA3E,WAqD7D,EAtDA,CAAoCL,EAAMoD,WAA7B,EAAAkJ,kB,8ZCpBb,YAEA,QAGA,QACA,QAcA,yE,OAKS,EAAAjO,QAAmB,CACxBoQ,qBAAiBjQ,EACjBkQ,qBAAiBlQ,EACjBmQ,iBAAanQ,EACboQ,qBAAiBpQ,EACjBqQ,mBAAerQ,GAGV,EAAAQ,OAAwB,CAC7B,YAAUR,EACV,qBAAiBA,EACjB,oBAAkBA,G,EA0CtB,OA1DkC,OAmBzB,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAkCiD,KAAK9C,QAAS8C,KAAK/C,OAC1E+C,KAAKqC,YAAc,IAAI,UAAQnF,GAC/B8C,KAAK2D,QAAQtE,aAAanF,KAAK8F,KAAKqC,aAEpCrC,KAAKwL,gBAAgBxL,KAAK/C,OAE1B,IAAM4D,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK6C,KAAKnC,QAAQT,SAAQ,SAACI,GAChC,EAAK6E,YAAYvB,GAAGtD,EAAWqD,EAASrD,QAIrC,YAAAyD,0BAAP,SAAiCC,GAAjC,WACE,GAAIA,IAAclB,KAAK/C,MAAO,CAC5B+C,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,aACxC,IAAMnF,EAAU,UAAKH,WAAkCiD,KAAK9C,QAASgE,GACrElB,KAAKqC,YAAc,IAAI,UAAQnF,GAC/B8C,KAAK2D,QAAQpD,IAAImL,eAAe1L,KAAKqC,aAErCrC,KAAKwL,gBAAgBtK,GAErB,IAAM,EAAW,UAAKtD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK6C,KAAKnC,QAAQT,SAAQ,SAACI,GAChC,EAAK6E,YAAYvB,GAAGtD,EAAW,EAASA,SAKvC,YAAAiE,qBAAP,WACEzB,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,cAGlC,YAAAmJ,gBAAR,SAAwBvO,GAClBA,EAAM0O,gBAAgB1O,EAAM0O,eAAe3L,KAAKqC,kBAC/BhF,IAAjBJ,EAAM2O,QAAsB5L,KAAKqC,YAAYwJ,UAAU5O,EAAM2O,SAvDrD,EAAA/H,YAA6C,EAAA3E,WAyD7D,EA1DA,CAAkCL,EAAMoD,WAA3B,EAAAmJ,gB,8ZCpBb,YAEA,SAGA,QACA,QAkBA,yE,OAKS,EAAAlO,QAAmB,CACxByQ,kBAActQ,EACd0O,eAAW1O,EACX+B,YAAQ/B,EACRiI,WAAOjI,EACPuQ,qBAAiBvQ,EACjBwQ,qBAAiBxQ,EACjByQ,WAAOzQ,EACP0L,cAAU1L,EACV0Q,YAAQ1Q,EACR2Q,kBAAc3Q,GAGT,EAAAQ,OAAuB,CAC5B,YAAUR,EACV,qBAAiBA,EACjB,oBAAkBA,EAClB,YAAUA,G,EAmDd,OAzEiC,OAyBxB,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACE,GAAIC,KAAK/C,MAAMgR,SACbjO,KAAKqC,YAAcrC,KAAK/C,MAAMgR,aACzB,CACL,IAAM/Q,EAAU,UAAKH,WAAiCiD,KAAK9C,QAAS8C,KAAK/C,OACzE+C,KAAKqC,YAAc,IAAI,UAAOnF,GAEhC8C,KAAK2D,QAAQtE,aAAanF,KAAK8F,KAAKqC,aAEpCrC,KAAKwL,gBAAgBxL,KAAK/C,OAE1B,IAAM4D,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAWqD,EAASrD,QAIrC,YAAAyD,0BAAP,SAAiCC,GAAjC,WACE,GAAIA,IAAclB,KAAK/C,MAAO,CAG5B,GAFA+C,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,aAEpCrC,KAAK/C,MAAMgR,SACbjO,KAAKqC,YAAcrC,KAAK/C,MAAMgR,aACzB,CACL,IAAM/Q,EAAU,UAAKH,WAAiCiD,KAAK9C,QAASgE,GACpElB,KAAKqC,YAAc,IAAI,UAAOnF,GAEhC8C,KAAK2D,QAAQpD,IAAImL,eAAe1L,KAAKqC,aAErCrC,KAAKwL,gBAAgBtK,GAErB,IAAM,EAAW,UAAKtD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK,GAAUC,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAW,EAASA,SAKvC,YAAAiE,qBAAP,WACEzB,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,cAGlC,YAAAmJ,gBAAR,SAAwBvO,GAClBA,EAAM0O,gBAAgB1O,EAAM0O,eAAe3L,KAAKqC,kBAC/BhF,IAAjBJ,EAAM2O,QAAsB5L,KAAKqC,YAAYwJ,UAAU5O,EAAM2O,SAtErD,EAAA/H,YAA6C,EAAA3E,WAwE7D,EAzEA,CAAiCL,EAAMoD,WAA1B,EAAAoJ,e,8ZCxBb,YAEA,SAGA,QACA,QAcA,yE,OAKS,EAAAnO,QAAmB,CACxB6L,cAAU1L,EACV6Q,UAAM7Q,EACN8Q,YAAQ9Q,EACR0P,oBAAgB1P,EAChBkH,YAAQlH,GAGH,EAAAQ,OAAoB,CACzB,YAAUR,EACV,qBAAiBA,EACjB,oBAAkBA,G,EA0CtB,OA1D+B,OAmBtB,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAA+BiD,KAAK9C,QAAS8C,KAAK/C,OACvE+C,KAAKqC,YAAc,IAAI,UAAKnF,GAC5B8C,KAAK2D,QAAQtE,aAAanF,KAAK8F,KAAKqC,aAEpCrC,KAAKwL,gBAAgBxL,KAAK/C,OAE1B,IAAM4D,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAWqD,EAASrD,QAIrC,YAAAyD,0BAAP,SAAiCC,GAAjC,WACE,GAAIA,IAAclB,KAAK/C,MAAO,CAC5B+C,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,aACxC,IAAMnF,EAAU,UAAKH,WAA+BiD,KAAK9C,QAASgE,GAClElB,KAAKqC,YAAc,IAAI,UAAKnF,GAC5B8C,KAAK2D,QAAQpD,IAAImL,eAAe1L,KAAKqC,aAErCrC,KAAKwL,gBAAgBtK,GAErB,IAAM,EAAW,UAAKtD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK,GAAUC,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAW,EAASA,SAKvC,YAAAiE,qBAAP,WACEzB,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,cAGlC,YAAAmJ,gBAAR,SAAwBvO,GAClBA,EAAM0O,gBAAgB1O,EAAM0O,eAAe3L,KAAKqC,kBAC/BhF,IAAjBJ,EAAM2O,QAAsB5L,KAAKqC,YAAYwJ,UAAU5O,EAAM2O,SAvDrD,EAAA/H,YAA6C,EAAA3E,WAyD7D,EA1DA,CAA+BL,EAAMoD,WAAxB,EAAAqJ,a,8ZCpBb,YAEA,SAGA,QACA,QAmBA,yE,OAKS,EAAApO,QAAmB,CACxB6L,cAAU1L,EACV+B,YAAQ/B,GAGH,EAAAQ,OAA0B,CAC/B,YAAUR,EACV,qBAAiBA,EACjB,oBAAkBA,EAClB,kBAAgBA,EAChB,oBAAkBA,EAClB,iBAAeA,G,EA0CnB,OA1DoC,OAmB3B,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAoCiD,KAAK9C,QAAS8C,KAAK/C,OAC5E+C,KAAKqC,YAAc,IAAI,UAAUnF,GACjC8C,KAAK2D,QAAQtE,aAAanF,KAAK8F,KAAKqC,aAEpCrC,KAAKwL,gBAAgBxL,KAAK/C,OAE1B,IAAM4D,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAWqD,EAASrD,QAIrC,YAAAyD,0BAAP,SAAiCC,GAAjC,WACE,GAAIA,IAAclB,KAAK/C,MAAO,CAC5B+C,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,aACxC,IAAMnF,EAAU,UAAKH,WAAoCiD,KAAK9C,QAASgE,GACvElB,KAAKqC,YAAc,IAAI,UAAUnF,GACjC8C,KAAK2D,QAAQpD,IAAImL,eAAe1L,KAAKqC,aAErCrC,KAAKwL,gBAAgBtK,GAErB,IAAM,EAAW,UAAKtD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK,GAAUC,SAAQ,SAACI,GAC7B,EAAK6E,YAAYvB,GAAGtD,EAAW,EAASA,SAKvC,YAAAiE,qBAAP,WACEzB,KAAK2D,QAAQpD,IAAIkL,kBAAkBzL,KAAKqC,cAGlC,YAAAmJ,gBAAR,SAAwBvO,GAClBA,EAAM0O,gBAAgB1O,EAAM0O,eAAe3L,KAAKqC,kBAC/BhF,IAAjBJ,EAAM2O,QAAsB5L,KAAKqC,YAAYwJ,UAAU5O,EAAM2O,SAvDrD,EAAA/H,YAA6C,EAAA3E,WAyD7D,EA1DA,CAAoCL,EAAMoD,WAA7B,EAAAsJ,kB,8ECzBb,aAqBE,EAAA6C,aArBM,EAAAA,aACR,aAqBE,EAAAC,WArBM,EAAAA,WACR,aAiBE,EAAA9L,OAjBM,EAAAA,OACR,aACA,SAOMD,EAAQ,CACZgM,UAAW,EAAAA,UACXC,OAAQ,EAAAA,OACRC,QAAS,EAAAJ,aACTK,MAAO,EAAAJ,YAKP,EAAA/L,S,8ZCpBF,YAEA,SAEA,QAGA,QACA,QAuCA,yE,OAKS,EAAApF,QAAmB,CACxBwR,OAAQ,SACRnK,OAAQ,IAAI,WAGP,EAAA1G,OAAwB,CAC7B,YAAUR,EACV,mBAAeA,EACf,qBAAiBA,EACjB,uBAAmBA,EACnB,4BAAwBA,EACxB,4BAAwBA,EACxB,sBAAkBA,EAClB,qBAAiBA,EACjB,qBAAiBA,EACjB,sBAAkBA,EAClB,qBAAiBA,EACjB,iBAAeA,EACf,gBAAcA,EACd,oBAAkBA,EAClB,YAAUA,G,EA6Dd,OAtFkC,OA4BzB,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAkCiD,KAAK9C,QAAS8C,KAAK/C,OACrEC,EAAQwR,SAAQxR,EAAQwR,OAAS,UACtC1O,KAAKsC,MAAQ,IAAI,UAAQpF,GACtB8C,KAAK/C,MAAM0R,QACZ3O,KAAKsC,MAAMsM,UAAU5O,KAAK/C,MAAM0R,QAElC3O,KAAK2D,QAAQvE,OAAOlF,KAAK8F,KAAKsC,OAE1BtC,KAAK/C,MAAM4R,UAAU7O,KAAK/C,MAAM4R,SAAS7O,KAAKsC,OAElD,IAAMzB,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK8E,MAAMxB,GAAGtD,EAAWqD,EAASrD,QAI/B,YAAAyD,0BAAP,SAAiCC,GAAjC,WACQhE,EAAU,UAAKH,WAAkCiD,KAAK9C,QAAS8C,KAAK/C,OAG1EpD,OAAOsD,KAAKD,GAASE,SAAQ,SAAC0R,GAC5B,GAAI5R,EAAQ4R,KAAY5N,EAAU4N,GAAlC,CACA,IAAMC,EAAS7N,EAAU4N,GACzB,OAAQA,GACN,IAAK,WAAY,EAAKxM,MAAM0M,YAAYD,GAAS,MACjD,IAAK,SAAU,EAAKzM,MAAM2M,UAAUF,GAAS,MAC7C,IAAK,OAAQ,EAAKzM,MAAM4M,QAAQH,GAAS,MACzC,IAAK,SAAU,EAAKzM,MAAMkH,IAAI,SAAUuF,GAAS,MACjD,IAAK,SAAU,EAAKzM,MAAM6M,UAAUJ,GAAS,MAC7C,IAAK,gBAAiB,EAAKzM,MAAM8M,iBAAiBL,GAAS,MAC3D,IAAK,gBAAiB,EAAKzM,MAAM+M,iBAAiBN,GAAS,MAC3D,IAAK,UAAW,EAAKzM,MAAMgN,WAAWP,GAAS,MAC/C,IAAK,SAAU,EAAKzM,MAAMiN,UAAUR,GAAS,MAC7C,IAAK,UAAW,EAAKzM,MAAMkN,WAAWT,GAAS,MAC/C,IAAK,SAAU,EAAKzM,MAAMsM,UAAUG,QAKpC7N,EAAU2N,UAAY3N,EAAU2N,WAAa7O,KAAK/C,MAAM4R,UAC1D3N,EAAU2N,SAAS7O,KAAKsC,OAI1B,IAAMmN,EAAY,UAAK7R,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAC7CyS,EAAY,UAAK9R,UAAUoC,KAAKnC,OAAQqD,GAC9CrH,OAAOsD,KAAK6C,KAAKnC,QAAQT,SAAQ,SAACI,GAC5BiS,EAAUjS,IAAY,EAAK8E,MAAMqN,GAAGnS,EAAWiS,EAAUjS,IACzDkS,EAAUlS,IAAY,EAAK8E,MAAMxB,GAAGtD,EAAWkS,EAAUlS,QAI1D,YAAAiE,qBAAP,WACEzB,KAAK2D,QAAQpD,IAAIqP,YAAY5P,KAAKsC,QAnFtB,EAAAuB,YAA6C,EAAA3E,WAqF7D,EAtFA,CAAkCL,EAAMoD,WAA3B,EAAAmM,gB,8ZC/Cb,YAEA,SACA,QACA,SAGA,QACA,QAoCA,yE,OAKS,EAAAlR,QAAmB,CACxB2S,aAASxS,EAETkH,OAAQ,IAAI,UAAoB,CAC9BuL,aAAc,oDACdC,IAAK,sDACLtL,WAAY,IAAI,UAAW,CACzBuL,KAAM,aACNjL,MAAO,SACPM,OAAQ,CAAC,EAAG,EAAG,KAAM,OAEvB4K,YAAa,CAAC,EAAG,EAAG,KAAM,OAE5BC,aAAS7S,EACTgI,YAAQhI,EACR8S,mBAAe9S,EACf+S,mBAAe/S,GAGV,EAAAQ,OAAsB,CAC3B,YAAUR,EACV,qBAAiBA,EACjB,uBAAmBA,EACnB,4BAAwBA,EACxB,4BAAwBA,EACxB,sBAAkBA,EAClB,qBAAiBA,EACjB,sBAAkBA,EAClB,qBAAiBA,EACjB,iBAAeA,EACf,gBAAcA,EACd,oBAAkBA,EAClB,YAAUA,G,EAyDd,OA9FgC,OAwCvB,YAAA+D,OAAP,WAAkB,OAAO,MAElB,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAgCiD,KAAK9C,QAAS8C,KAAK/C,OACxE+C,KAAKsC,MAAQ,IAAI,UAAMpF,GACpB8C,KAAK/C,MAAM0R,QACZ3O,KAAKsC,MAAMsM,UAAU5O,KAAK/C,MAAM0R,QAElC3O,KAAK2D,QAAQvE,OAAOlF,KAAK8F,KAAKsC,OAE1BtC,KAAK/C,MAAM4R,UAAU7O,KAAK/C,MAAM4R,SAAS7O,KAAKsC,OAElD,IAAMzB,EAAW,UAAKjD,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAClDpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK8E,MAAMxB,GAAGtD,EAAWqD,EAASrD,QAI/B,YAAAyD,0BAAP,SAAkCC,GAAlC,WACQhE,EAAU,UAAKH,WAAgCiD,KAAK9C,QAAS8C,KAAK/C,OAGxEpD,OAAOsD,KAAKD,GAASE,SAAQ,SAAC0R,GAC5B,GAAI5R,EAAQ4R,KAAY5N,EAAU4N,GAAlC,CACA,IAAMC,EAAS7N,EAAU4N,GACzB,OAAQA,GACN,IAAK,SAAU,EAAKxM,MAAMsM,UAAUG,GAAS,MAC7C,IAAK,UAAW,EAAKzM,MAAMgN,WAAWP,GAAS,MAC/C,IAAK,SAAU,EAAKzM,MAAMiN,UAAUR,GAAS,MAC7C,IAAK,UAAW,EAAKzM,MAAMkN,WAAWT,GAAS,MAC/C,IAAK,SAAU,EAAKzM,MAAM6M,UAAUJ,GAAS,MAC7C,IAAK,gBAAiB,EAAKzM,MAAM8M,iBAAiBL,GAAS,MAC3D,IAAK,gBAAiB,EAAKzM,MAAM+M,iBAAiBN,QAKlD7N,EAAU2N,UAAY3N,EAAU2N,WAAa7O,KAAK/C,MAAM4R,UAC1D3N,EAAU2N,SAAS7O,KAAKsC,OAI1B,IAAMmN,EAAY,UAAK7R,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAC7CyS,EAAY,UAAK9R,UAAUoC,KAAKnC,OAAQqD,GAC9CrH,OAAOsD,KAAK6C,KAAKnC,QAAQT,SAAQ,SAACI,GAC5BiS,EAAUjS,IAAY,EAAK8E,MAAMqN,GAAGnS,EAAWiS,EAAUjS,IACzDkS,EAAUlS,IAAY,EAAK8E,MAAMxB,GAAGtD,EAAWkS,EAAUlS,QAI1D,YAAAiE,qBAAP,WACEzB,KAAK2D,QAAQpD,IAAIqP,YAAY5P,KAAKsC,QA1FtB,EAAAuB,YAA6C,EAAA3E,WA6F7D,EA9FA,CAAgCL,EAAMoD,WAAzB,EAAAoM,c,8ZC5Cb,YAGA,2B,+CAIA,OAJ4B,OACnB,YAAAjN,OAAP,WACE,OAAQ,2BAAMpB,KAAK/C,MAAMyB,WAE7B,EAJA,CAA4BG,EAAMoD,WAArB,EAAAM,U,8ZCHb,YAEA,SAGA,QACA,QAEA,QAEA,SAsCA,yE,OAKS,EAAArF,QAAmB,CACxBqH,OAAQ,IAAI,UAAI,CACduL,aAAc,WACdC,IAAK,mEAIF,EAAAlS,OAAqB,CAC1B,YAAUR,EACV,qBAAiBA,EACjB,4BAAwBA,EACxB,4BAAwBA,EACxB,sBAAkBA,EAClB,sBAAkBA,EAClB,qBAAiBA,EACjB,qCAAiCA,EACjC,sBAAkBA,EAClB,qBAAiBA,EACjB,iBAAeA,EACf,gBAAcA,EACd,oBAAkBA,EAClB,YAAUA,G,EA+Dd,OAzF+B,OA6BtB,YAAA+D,OAAP,WACE,OAAO,MAGF,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAA+BiD,KAAK9C,QAAS8C,KAAK/C,OACvE+C,KAAKsC,MAAQ,IAAI,UAAKpF,GAClB8C,KAAK/C,MAAM0R,QACb3O,KAAKsC,MAAMsM,UAAU5O,KAAK/C,MAAM0R,QAElC3O,KAAK2D,QAAQvE,OAAOlF,KAAK8F,KAAKsC,OAE1BtC,KAAK/C,MAAM4R,UAAU7O,KAAK/C,MAAM4R,SAAS7O,KAAKsC,OAElD,IAAMzB,EAAW,UAAKjD,UAAiCoC,KAAKnC,OAAQmC,KAAK/C,OACzEpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK8E,MAAMxB,GAAGtD,EAAWqD,EAASrD,OAGpCuD,QAAQC,IAAIhB,KAAK2D,QAAQvE,SAGpB,YAAA6B,0BAAP,SAAiCC,GAAjC,WACQhE,EAAU,UAAKH,WAA+BiD,KAAK9C,QAAS8C,KAAK/C,OAGvEpD,OAAOsD,KAAKD,GAASE,SAAQ,SAAC0R,GAC5B,GAAI5R,EAAQ4R,KAAY5N,EAAU4N,GAAlC,CACA,IAAMC,EAAS7N,EAAU4N,GACzB,OAAQA,GACN,IAAK,SAAU,EAAKxM,MAAMsM,UAAUG,GAAS,MAC7C,IAAK,UAAW,EAAKzM,MAAMgN,WAAWP,GAAS,MAC/C,IAAK,UAAW,EAAKzM,MAAM+N,WAAWtB,GAAS,MAC/C,IAAK,SAAU,EAAKzM,MAAMiN,UAAUR,GAAU,IAAI,WAAiB,MACnE,IAAK,UAAW,EAAKzM,MAAMkN,WAAWT,GAAS,MAC/C,IAAK,SAAU,EAAKzM,MAAM6M,UAAUJ,GAAS,MAC7C,IAAK,gBAAiB,EAAKzM,MAAM8M,iBAAiBL,GAAS,MAC3D,IAAK,gBAAiB,EAAKzM,MAAM+M,iBAAiBN,GAAS,MAC3D,IAAK,yBAA0B,EAAKzM,MAAMgO,0BAA0BvB,QAKpE7N,EAAU2N,UAAY3N,EAAU2N,WAAa7O,KAAK/C,MAAM4R,UAC1D3N,EAAU2N,SAAS7O,KAAKsC,OAI1B,IAAMmN,EAAY,UAAK7R,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAC7CyS,EAAY,UAAK9R,UAAUoC,KAAKnC,OAAQqD,GAC9CrH,OAAOsD,KAAK6C,KAAKnC,QAAQT,SAAQ,SAACI,GAC5BiS,EAAUjS,IAAY,EAAK8E,MAAMqN,GAAGnS,EAAWiS,EAAUjS,IACzDkS,EAAUlS,IAAY,EAAK8E,MAAMxB,GAAGtD,EAAWkS,EAAUlS,QAI1D,YAAAiE,qBAAP,WACEzB,KAAK2D,QAAQpD,IAAIqP,YAAY5P,KAAKsC,QArFtB,EAAAuB,YAA6C,EAAA3E,WAwF7D,EAzFA,CAA+BL,EAAMoD,WAAxB,EAAAqM,a,8ZC/Cb,YAGA,QACA,QAIA,QACA,QAoCA,yE,OAMS,EAAApR,QAAmB,CACxBqH,OAAQ,IAAI,WAGP,EAAA1G,OAAuB,CAC5B,YAAUR,EACV,qBAAiBA,EACjB,4BAAwBA,EACxB,4BAAwBA,EACxB,sBAAkBA,EAClB,sBAAkBA,EAClB,qBAAiBA,EACjB,sBAAkBA,EAClB,qBAAiBA,EACjB,iBAAeA,EACf,gBAAcA,EACd,oBAAkBA,EAClB,YAAUA,G,EAgEd,OAvF4B,OA0BnB,YAAA+D,OAAP,WACE,OAAO,MAGF,YAAArB,kBAAP,sBACQ7C,EAAU,UAAKH,WAAWiD,KAAK9C,QAAS8C,KAAK/C,OACnD+C,KAAKsC,MAAQ,IAAI,UAAYpF,GACzB8C,KAAK/C,MAAM0R,QACb3O,KAAKsC,MAAMsM,UAAU5O,KAAK/C,MAAM0R,QAElC3O,KAAK2D,QAAQvE,OAAOlF,KAAK8F,KAAKsC,OAE1BtC,KAAK/C,MAAM4R,UAAU7O,KAAK/C,MAAM4R,SAAS7O,KAAKsC,OAElD,IAAMzB,EAAW,UAAKjD,UAAqCoC,KAAKnC,OAAQmC,KAAK/C,OAC7EpD,OAAOsD,KAAK0D,GAAUzD,SAAQ,SAACI,GAC7B,EAAK8E,MAAMxB,GAAGtD,EAAWqD,EAASrD,QAI/B,YAAAyD,0BAAP,SAAiCC,GAAjC,WACQhE,EAAU,UAAKH,WAAiCiD,KAAK9C,QAAS8C,KAAK/C,OAGzEpD,OAAOsD,KAAKD,GAASE,SAAQ,SAAC0R,GAC5B,GAAI5R,EAAQ4R,KAAY5N,EAAU4N,GAAlC,CACA,IAAMC,EAAS7N,EAAU4N,GACzB,OAAQA,GACN,IAAK,cAAe,EAAKxM,MAAMkH,IAAI,cAAeuF,GAAS,MAC3D,IAAK,eAAgB,EAAKzM,MAAMkH,IAAI,eAAgBuF,GAAS,MAC7D,IAAK,SAAU,EAAKzM,MAAM6M,UAAUJ,GAAS,MAC7C,IAAK,gBAAiB,EAAKzM,MAAM8M,iBAAiBL,GAAS,MAC3D,IAAK,gBAAiB,EAAKzM,MAAM+M,iBAAiBN,GAAS,MAC3D,IAAK,UAAW,EAAKzM,MAAMgN,WAAWP,GAAS,MAC/C,IAAK,SAAU,EAAKzM,MAAMiN,UAAUR,GAAS,MAC7C,IAAK,QAAS,EAAKzM,MAAMiO,SAASxB,GAAS,MAC3C,IAAK,uBAAwB,EAAKzM,MAAMkH,IAAI,uBAAwBuF,GAAS,MAC7E,IAAK,yBAA0B,EAAKzM,MAAMkH,IAAI,yBAA0BuF,GAAS,MACjF,IAAK,UAAW,EAAKzM,MAAMkN,WAAWT,GAAS,MAC/C,IAAK,SAAU,EAAKzM,MAAMsM,UAAUG,QAKpC7N,EAAU2N,UAAY3N,EAAU2N,WAAa7O,KAAK/C,MAAM4R,UAC1D3N,EAAU2N,SAAS7O,KAAKsC,OAI1B,IAAMmN,EAAY,UAAK7R,UAAUoC,KAAKnC,OAAQmC,KAAK/C,OAC7CyS,EAAY,UAAK9R,UAAUoC,KAAKnC,OAAQqD,GAC9CrH,OAAOsD,KAAK6C,KAAKnC,QAAQT,SAAQ,SAACI,GAC5BiS,EAAUjS,IAAY,EAAK8E,MAAMqN,GAAGnS,EAAWiS,EAAUjS,IACzDkS,EAAUlS,IAAY,EAAK8E,MAAMxB,GAAGtD,EAAWkS,EAAUlS,QAI1D,YAAAiE,qBAAP,WACEzB,KAAK2D,QAAQpD,IAAIqP,YAAY5P,KAAKsC,QAnFtB,EAAAuB,YAA6C,EAAA3E,WAsF7D,EAvFA,CAA4BL,EAAMoD,WAArB,EAAAsM,U,8EC9Cb,aAUE,EAAA/L,QAVO,EAAAA,QACT,aAQE,EAAAC,SARO,EAAAA,U,8ZCDT,YACA,SAEA,SAGA,QACA,QAsBA,yE,OAMS,EAAAvF,QAAmB,CACxBsT,QAAInT,EACJoT,aAASpT,EACTqT,YAAQrT,EACRiJ,cAAUjJ,EACVsT,WAAW,EACXC,iBAAavT,EACbwT,aAASxT,EACTyT,sBAAkBzT,EAClB0T,mBAAe1T,GAGV,EAAAQ,OAAwB,CAC7B,YAAUR,EACV,sBAAkBA,EAClB,kBAAcA,EACd,qBAAiBA,EACjB,uBAAmBA,EACnB,0BAAsBA,EACtB,oBAAkBA,G,EAkBtB,OA3C6B,OA4BpB,YAAA+D,OAAP,WACE,OACE,2BACGpB,KAAK/C,MAAMyB,WAKX,YAAAqB,kBAAP,WACE,IAAM7C,EAAU,UAAKH,WAAkCiD,KAAK9C,QAAS8C,KAAK/C,OAC1EC,EAAQuT,QAAWtK,EAASC,YAAYpG,MAAkBgR,cAAc,OACxEhR,KAAKiR,QAAU,IAAI,UAAU/T,GAC7B8C,KAAK2D,QAAQpE,SAASrF,KAAK8F,KAAKiR,SAC5BjR,KAAK/C,MAAMiU,YAAYlR,KAAK/C,MAAMiU,WAAWlR,KAAKiR,UAxC1C,EAAApN,YAA6C,EAAA3E,WA0C7D,EA3CA,CAA6BL,EAAMoD,WAAtB,EAAAO,W,8ZC7Bb,YAEA,2B,+CAIA,OAJ8B,OACrB,YAAApB,OAAP,WACE,OAAQ,2BAAMpB,KAAK/C,MAAMyB,WAE7B,EAJA,CAA8BG,EAAMoD,WAAvB,EAAAQ","file":"lib/main.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([159,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as React from 'react';\n\nimport Style from 'ol/style/Style';\nimport Event from 'ol/events/Event';\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\nexport type ReactOpenlayersEvent<T extends Event = Event> = ((event: T | Event) => void) | void;\n\nexport interface ReactOpenlayersEvents {\n  [key: string]: ((event: Event | void) => void ) | void\n} \n\n/**\n * Extract default options from props\n * \n * @param defaultOpts Default options\n * @param props Props to extract\n */\nexport const getOptions = <O, P>(defaultOpts: O, props: P): O => {\n    const options: O = { ...defaultOpts };\n    Object.keys(props).forEach((key: string) => {\n      if (\n        key !== 'children'\n        && props[key] !== undefined //exclude undefined ones\n        && !key.match(/^on[A-Z]/)     //exclude events\n      ) {\n        options[key] = props[key];\n      }\n    });\n\n    return options;\n  }\n\n/**\n * Converts eventName to camelCase\n * \n * @param {string} eventName\n * @returns {string}\n */\nexport const getPropsKey = (eventName: string): string => {\n  const processedEventName: string = eventName\n    .replace(/(\\:[a-z])/g, ($1: string) => $1.toUpperCase())\n    .replace(/^[a-z]/, ($1: string) => $1.toUpperCase())\n    .replace(':','');\n\n  return `on${processedEventName}`;\n}\n\n/**\n * Extract events from props\n * \n * @param events \n * @param props \n */\nexport const getEvents = <E extends ReactOpenlayersEvents, P>(events: E, props: P): Partial<P> => {\n  const prop2EventMap: Partial<P> = {};\n  Object.keys(events).forEach((key:string) => {\n    prop2EventMap[getPropsKey(key)] = key;\n  })\n\n  const ret: Partial<P> = {};\n  Object.keys(props).forEach((propName: string) => {\n    const eventName = prop2EventMap[propName];\n    const prop = props[propName];\n    if (prop !== undefined && propName.match(/^on[A-Z]/) && eventName) {\n      ret[eventName] = prop;\n    }\n  })\n\n  return ret;\n}\n\nconst typeOf = (obj: {}) => ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n\n/**\n * Clones recursively Style objects\n * \n * @param obj Style object\n */\nexport const cloneStyle = (obj: Style): Style => {\n  const type = typeOf(obj);\n  if (type === 'object' || type === 'array') {\n    if (obj.clone) {\n      return obj.clone();\n    }\n    \n    // return Object.assign( Object.create( Object.getPrototypeOf(obj)), obj)\n    const clone = type === 'array' ? [] : {};\n    Object.keys(obj).forEach((key: string) => {\n      clone[key] = cloneStyle(obj[key]);\n    })\n\n    return clone as Style;\n  }\n\n  return obj;\n}\n\n/**\n * Search children for a given element type\n * \n * @param children React children\n * @param childType Child type to find\n */\nexport const findChild = <T extends React.ReactElement<{}>>(children: React.ReactNode, childType: string): T | void => {\n  let found: T | void;\n  const childrenArr = React.Children.toArray(children);\n  for (const child of childrenArr) {\n    if (React.isValidElement(child)) {\n      if (typeof child.type === 'string' && child.type === childType){\n        found = child as T;\n        break;\n      } else if (typeof child.type === 'function' && child.type.name === childType) {\n        found = child as T;\n        break;\n      }\n    }\n  }\n\n  return found;\n}\n\nexport default {\n  getOptions,\n  getEvents,\n  cloneStyle,\n  findChild,\n}","import * as React from 'react';\n\nimport * as Controls from 'ol/control';\nimport Control from 'ol/control/Control';\nimport * as Interactions from 'ol/interaction';\nimport Interaction from 'ol/interaction/Interaction';\nimport Layer from 'ol/layer/Layer';\nimport Map from 'ol/Map';\nimport Overlay from 'ol/Overlay';\nimport View, { ViewOptions } from 'ol/View';\nimport MapBrowserEvent from 'ol/MapBrowserEvent';\nimport MapEvent from 'ol/MapEvent';\nimport Event from 'ol/render/Event';\nimport { MapOptions } from 'ol/PluggableMap';\n\nimport Util, { Omit, ReactOpenlayersEvent, ReactOpenlayersEvents } from './util';\n\nimport { ControlsProps } from './controls/controls';\nimport { InteractionsProps } from './interactions/interactions';\n\nimport './map.css';\nimport 'ol/ol.css';\n\nexport type MapContextType = MapReact | void;\nexport const MapContext = React.createContext<MapContextType>(undefined);\n\n\nexport interface MapProps extends Omit<MapOptions, 'view'> {\n  view?: ViewOptions | View\n  className?: string\n  style?: React.CSSProperties\n  onChange?: ReactOpenlayersEvent\n  onChangeLayerGroup?: ReactOpenlayersEvent\n  onChangeSize?: ReactOpenlayersEvent\n  onChangeTarget?: ReactOpenlayersEvent\n  onChangeView?: ReactOpenlayersEvent\n  onClick?: ReactOpenlayersEvent<MapBrowserEvent>\n  onDblclick?: ReactOpenlayersEvent<MapBrowserEvent>\n  onMovestart?: ReactOpenlayersEvent<MapEvent>\n  onMoveend?: ReactOpenlayersEvent<MapEvent>\n  onPointerdrag?: ReactOpenlayersEvent<MapBrowserEvent>\n  onPointermove?: ReactOpenlayersEvent<MapBrowserEvent>\n  onPostcompose?: ReactOpenlayersEvent<Event>\n  onPostrender?: ReactOpenlayersEvent<MapEvent>\n  onPrecompose?: ReactOpenlayersEvent<Event>\n  onPropertychange?: ReactOpenlayersEvent\n  onSingleclick?: ReactOpenlayersEvent<MapBrowserEvent>\n  mapRef?(map: Map): void\n}\n\nexport interface MapEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'change:layerGroup': ReactOpenlayersEvent\n  'change:size': ReactOpenlayersEvent\n  'change:target': ReactOpenlayersEvent\n  'change:view': ReactOpenlayersEvent\n  'click': ReactOpenlayersEvent<MapBrowserEvent>\n  'dblclick': ReactOpenlayersEvent<MapBrowserEvent>\n  'movestart': ReactOpenlayersEvent<MapEvent>\n  'moveend': ReactOpenlayersEvent<MapEvent>\n  'pointerdrag': ReactOpenlayersEvent<MapBrowserEvent>\n  'pointermove': ReactOpenlayersEvent<MapBrowserEvent>\n  'postcompose': ReactOpenlayersEvent<Event>\n  'postrender': ReactOpenlayersEvent<MapEvent>\n  'precompose': ReactOpenlayersEvent<Event>\n  'propertychange': ReactOpenlayersEvent\n  'singleclick': ReactOpenlayersEvent<MapBrowserEvent>\n}\n\n/**\n * Implementation of ol.map https://openlayers.org/en/latest/apidoc/ol.Map.html\n *\n * example:\n * <Map view={{center: [0, 0], zoom: 1}} mapRef={map => this.map = map}>\n *   <layers>\n *     <layer.Tile source={new ol.source.OSM()} />\n *     <layer.Vector options={}/>\n *   </layers>\n *   <controls></controls>\n *   <interactions></interactions>\n *   <overlays></overlays>\n * </Map>\n */\nexport class MapReact extends React.Component<MapProps> {\n\n  public map: Map;\n  public mapDiv: React.RefObject<HTMLDivElement>;\n\n  public layers: Layer[] = [];\n  public interactions: Interaction[] = [];\n  public controls: Control[] = [];\n  public overlays: Overlay[] = [];\n\n  public options: MapOptions = {\n    pixelRatio: undefined,\n    keyboardEventTarget: undefined,\n    view: new View({ center: [0, 0], zoom: 3 }),\n    controls: undefined,\n    interactions: undefined,\n    layers: undefined,\n    overlays: undefined\n  };\n\n  public events: MapEvents = {\n    'change': undefined,\n    'change:layerGroup': undefined,\n    'change:size': undefined,\n    'change:target': undefined,\n    'change:view': undefined,\n    'click': undefined,\n    'dblclick': undefined,\n    'movestart': undefined,\n    'moveend': undefined,\n    'pointerdrag': undefined,\n    'pointermove': undefined,\n    'postcompose': undefined,\n    'postrender': undefined,\n    'precompose': undefined,\n    'propertychange': undefined,\n    'singleclick': undefined\n  };\n\n  constructor(props: MapProps) {\n    super(props);\n    this.mapDiv = React.createRef<HTMLDivElement>();\n  }\n\n  public componentDidMount() {\n    const options = Util.getOptions<MapOptions, MapProps>(this.options, this.props);\n    if (options.view && !(options.view instanceof View)) {\n      options.view = new View(options.view);\n    }\n\n    const controlsCmp = Util.findChild<React.ReactElement<ControlsProps>>(this.props.children, 'Controls');\n    const interactionsCmp = Util.findChild<React.ReactElement<InteractionsProps>>(this.props.children, 'Interactions');\n\n    options.controls = Controls.defaults(controlsCmp ? controlsCmp.props : {}).extend(this.controls);\n    options.interactions = Interactions.defaults(interactionsCmp ? interactionsCmp.props : {}).extend(this.interactions);\n\n    options.layers = this.layers;\n    options.overlays = this.overlays;\n    this.map = new Map(options);\n    if (this.props.target) {\n      this.map.setTarget(this.props.target);\n    } else if (this.mapDiv.current) {\n      this.map.setTarget(this.mapDiv.current);\n    }\n    this.updateFromProps(this.props, /* isMounting = */ true);\n\n    if (this.props.mapRef) this.props.mapRef(this.map);\n\n    //regitster events\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.map.on(eventName, olEvents[eventName]);\n    })\n\n    console.log(this.map)\n  }\n\n  public componentWillReceiveProps(nextProps: MapProps) {\n    this.updateFromProps(nextProps, false);\n  }\n\n  public componentDidUpdate() {\n    if (this.map && this.mapDiv.current) {\n      this.map.setTarget(this.mapDiv.current);\n    }\n  }\n\n  public render() {\n    return (\n      <MapContext.Provider value={this}>\n        <div\n          className={(this.props.className || \"openlayers-map\")}\n          ref={this.mapDiv}\n          tabIndex={0}\n        >\n          {this.props.children}\n        </div>\n      </MapContext.Provider>\n    );\n\n  }\n\n  public componentWillUnmount() {\n    // this.map.setTarget(undefined)\n  }\n\n  private updateFromProps(props: MapProps, isMounting: boolean) {\n    if (isMounting || props.view) {\n      // Update the center and the resolution of the view only when it is\n      // mounted the first time but not when the properties are updated.\n      // *Unless* we're passed a position object that explicitly declares\n      // that we need to update.\n      this.updateCenterAndResolutionFromProps(props)\n    }\n  }\n\n  private updateCenterAndResolutionFromProps(props: MapProps) {\n    const view = this.map.getView();\n\n    if (props.view && !(props.view instanceof View)) {\n      if (props.view.center !== undefined) view.setCenter(props.view.center);\n      if (props.view.zoom !== undefined) view.setZoom(props.view.zoom);\n      if (props.view.resolution !== undefined) view.setResolution(props.view.resolution)\n    }\n  }\n}\n","import { control, Controls } from './controls/index';\nimport { custom } from './custom/index';\nimport { interaction, Interactions } from './interactions/index';\nimport { layer, Layers } from './layers/index';\nimport { Overlay, Overlays } from './overlays';\n\nimport { MapReact, MapContext } from './map';\nimport Util from './util';\n\nexport {\n  //groups\n  Interactions,\n  Layers,\n  Overlays,\n  Controls,\n\n  //name spaces\n  layer,\n  custom,\n  control,\n  interaction,\n\n  //Objects\n  MapReact,\n  MapContext,\n  Overlay,\n\n  Util\n};\n","import { AttributionReact } from './attribution';\nimport { Controls } from './controls';\nimport { FullScreenReact } from './full-screen';\nimport { MousePositionReact } from './mouse-position';\nimport { OverviewMapReact } from './overview-map';\nimport { RotateReact } from './rotate';\nimport { ScaleLineReact } from './scale-line';\nimport { ZoomReact } from './zoom';\nimport { ZoomSliderReact } from './zoom-slider';\nimport { ZoomToExtentReact } from './zoom-to-extent';\nimport { Control } from 'ol/control';\n\nexport interface ControlType<T extends Control> {\n  controlRef?(control:T):void\n}\n\nconst control = {\n  ScaleLineReact,\n  AttributionReact,\n  FullScreenReact,\n  MousePositionReact,\n  OverviewMapReact,\n  RotateReact,\n  ZoomSliderReact,\n  ZoomToExtentReact,\n  ZoomReact,\n};\n\nexport {\n  Controls,\n  control\n};\n","import * as React from 'react';\n\nimport Attribution, { Options } from 'ol/control/Attribution';\n\nimport { ControlType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface AttributionProps extends Options, ControlType<Attribution> {\n  onChange: ReactOpenlayersEvent\n  onPropertychange: ReactOpenlayersEvent\n};\nexport interface AttributionEvents extends ReactOpenlayersEvents {\n  change?: ReactOpenlayersEvent\n  propertychange?: ReactOpenlayersEvent\n};\n\nexport class AttributionReact extends React.Component<AttributionProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public control: Attribution;\n\n  public options: Options = {\n    className: undefined,\n    target: undefined,\n    collapsible: undefined,\n    collapsed: undefined,\n    tipLabel: undefined,\n    label: undefined,\n    collapseLabel: undefined,\n    render: undefined\n  };\n\n  public events: AttributionEvents = {\n    change: undefined,\n    propertychange: undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, AttributionProps>(this.options, this.props);\n    this.control = new Attribution(options);\n    this.context.controls.push(this.control);\n\n    if (this.props.controlRef) this.props.controlRef(this.control);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.control.on(eventName, olEvents[eventName]);\n    });\n  }\n\n}","\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js!./map.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/dist/cjs.js!./map.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/dist/cjs.js!./map.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".openlayers-map {\\n  height: 300px;\\n  width: 100%;\\n  min-width: 399px;\\n}\\n\", \"\"]);\n\n","import * as React from 'react';\n\nimport Util from '../util';\nimport { AttributionProps } from './attribution';\nimport { RotateProps } from './rotate';\nimport { ZoomProps } from './zoom';\n\nexport interface ControlsProps {\n  attribution?: boolean\n  attributionOptions?: AttributionProps\n  rotate?: boolean\n  rotateOptions?: RotateProps\n  zoom?: boolean\n  zoomOptions?: ZoomProps\n}\n\n// I wish I can name it as 'layers', not 'Layers'\nexport class Controls extends React.Component<ControlsProps> {\n  public options: ControlsProps = {\n    attribution: undefined,\n    attributionOptions: undefined,\n    rotate: undefined,\n    rotateOptions: undefined,\n    zoom: undefined,\n    zoomOptions: undefined\n  };\n\n  constructor(props: ControlsProps) {\n    super(props);\n    this.options = Util.getOptions<ControlsProps, ControlsProps>(this.options, this.props);\n  }\n\n  public render() {\n    return (<div>{this.props.children}</div>);\n  }\n}","import * as React from 'react';\n\nimport FullScreen, { Options } from 'ol/control/FullScreen';\n\nimport { ControlType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface FullScreenProps extends Options, ControlType<FullScreen> {\n  onchange?: ReactOpenlayersEvent\n  onpropertychange?: ReactOpenlayersEvent\n};\n\nexport interface FullScreenEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n};\n\nexport class FullScreenReact extends React.Component<FullScreenProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public control: FullScreen;\n\n  public options: Options = {\n    className: undefined,\n    label: undefined,\n    labelActive: undefined,\n    tipLabel: undefined,\n    keys: undefined,\n    target: undefined,\n    source: undefined\n  };\n\n  public events: FullScreenEvents = {\n    'change': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, FullScreenProps>(this.options, this.props);\n    this.control = new FullScreen(options);\n    this.context.controls.push(this.control)\n\n    if (this.props.controlRef) this.props.controlRef(this.control);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.control.on(eventName, olEvents[eventName]);\n    });\n  }\n\n}","import * as React from 'react';\n\nimport MousePosition from 'ol/control/MousePosition'\n\nimport { ControlType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport { Options } from 'ol/control/MousePosition';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface MousePositionProps extends Options, ControlType<MousePosition> {\n  onChange?: ReactOpenlayersEvent\n  onChangeCoordinateFormat?: ReactOpenlayersEvent\n  onChangeProjection?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n};\n\nexport interface MousePositionEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'change:coordinateFormat': ReactOpenlayersEvent\n  'change:projection': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n};\n\nexport class MousePositionReact extends React.Component<MousePositionProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public control: MousePosition;\n\n  public options: Options = {\n    className: undefined,\n    coordinateFormat: undefined,\n    projection: undefined,\n    render: undefined,\n    target: undefined,\n    undefinedHTML: undefined\n  };\n\n  public events: MousePositionEvents = {\n    'change': undefined,\n    'change:coordinateFormat': undefined,\n    'change:projection': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, MousePositionProps>(this.options, this.props);\n    this.control = new MousePosition(options);\n    this.context.controls.push(this.control)\n\n    if (this.props.controlRef) this.props.controlRef(this.control);\n\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.control.on(eventName, olEvents[eventName]);\n    });\n  }\n}","import * as React from 'react';\n\nimport OverviewMap, { Options } from 'ol/control/OverviewMap';\n\nimport { ControlType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface OverviewMapProps extends Options, ControlType<OverviewMap> {\n  onChange?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n};\n\nexport interface OverviewMapEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n};\n\nexport class OverviewMapReact extends React.Component<OverviewMapProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public control: OverviewMap;\n\n  public options: Options = {\n    collapsed: undefined,\n    collapseLabel: undefined,\n    collapsible: undefined,\n    label: undefined,\n    layers: undefined,\n    render: undefined,\n    target: undefined,\n    tipLabel: undefined,\n    view: undefined\n  };\n\n  public events: OverviewMapEvents = {\n    'change': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, OverviewMapProps>(this.options, this.props);\n    this.control = new OverviewMap(options);\n    this.context.controls.push(this.control)\n\n    if (this.props.controlRef) this.props.controlRef(this.control);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.control.on(eventName, olEvents[eventName]);\n    });\n  }\n\n}","import * as React from 'react';\n\nimport Rotate, { Options } from 'ol/control/Rotate'\n\nimport { ControlType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface RotateProps extends Options, ControlType<Rotate> {\n  onChange?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n};\n\nexport interface RotateEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n};\n\nexport class RotateReact extends React.Component<RotateProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public control: Rotate;\n\n  public options: Options = {\n    className: undefined,\n    label: undefined,\n    tipLabel: undefined,\n    duration: undefined,\n    autoHide: undefined,\n    render: undefined,\n    resetNorth: undefined,\n    target: undefined\n  };\n\n  public events: RotateEvents = {\n    'change': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, RotateProps>(this.options, this.props);\n    this.control = new Rotate(options);\n    this.context.controls.push(this.control)\n\n    if (this.props.controlRef) this.props.controlRef(this.control);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.control.on(eventName, olEvents[eventName]);\n    })\n  }\n\n}","import * as React from 'react';\n\nimport ScaleLine, { Options } from 'ol/control/ScaleLine'\n\nimport { ControlType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface ScaleLineProps extends Options, ControlType<ScaleLine> {\n  onChange?: ReactOpenlayersEvent\n  onChangeUnits?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n};\n\nexport interface ScaleLineEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'change:units': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n};\n\nexport class ScaleLineReact extends React.Component<ScaleLineProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public control: ScaleLine;\n\n  public options: Options = {\n    className: undefined,\n    minWidth: undefined,\n    render: undefined,\n    target: undefined,\n    units: undefined\n  };\n\n  public events: ScaleLineEvents = {\n    'change': undefined,\n    'change:units': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, ScaleLineProps>(this.options, this.props);\n    this.control = new ScaleLine(options);\n    this.context.controls.push(this.control)\n\n    if (this.props.controlRef) this.props.controlRef(this.control);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.control.on(eventName, olEvents[eventName]);\n    })\n  }\n\n}","import * as React from 'react';\n\nimport Zoom, { Options } from 'ol/control/Zoom'\n\nimport { ControlType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface ZoomProps extends Options, ControlType<Zoom> {\n  onChange?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n};\n\nexport interface ZoomPropsEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n};\n\n\nexport class ZoomReact extends React.Component<ZoomProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public control: Zoom;\n\n  public options: Options = {\n    duration: undefined,\n    className: undefined,\n    zoomInLabel: undefined,\n    zoomOutLabel: undefined,\n    zoomInTipLabel: undefined,\n    zoomOutTipLabel: undefined,\n    delta: undefined\n  };\n\n  public events: ZoomPropsEvents = {\n    'change': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, ZoomProps>(this.options, this.props);\n    this.control = new Zoom(options);\n    this.context.controls.push(this.control)\n\n    if (this.props.controlRef) this.props.controlRef(this.control);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.control.on(eventName, olEvents[eventName]);\n    });\n  }\n}","import * as React from 'react';\n\nimport ZoomSlider, { Options } from 'ol/control/ZoomSlider'\n\nimport { ControlType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface ZoomSliderProps extends Options, ControlType<ZoomSlider> {\n  onChange?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n};\n\nexport interface ZoomSliderEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n};\n\nexport class ZoomSliderReact extends React.Component<ZoomSliderProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public control: ZoomSlider;\n\n  public options: Options = {\n    duration: undefined,\n    className: undefined,\n    render: undefined\n  };\n\n  public events: ZoomSliderEvents = {\n    'change': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, ZoomSliderProps>(this.options, this.props);\n    this.control = new ZoomSlider(options);\n    this.context.controls.push(this.control)\n\n    if (this.props.controlRef) this.props.controlRef(this.control);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.control.on(eventName, olEvents[eventName]);\n    });\n  }\n\n}","import * as React from 'react';\n\nimport ZoomToExtent, { Options } from 'ol/control/ZoomToExtent'\n\nimport { ControlType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface ZoomToExtentProps extends Options, ControlType<ZoomToExtent> {\n  onChange?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n};\n\nexport interface ZoomToExtentEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n};\n\nexport class ZoomToExtentReact extends React.Component<ZoomToExtentProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public control: ZoomToExtent;\n\n  public options: Options = {\n    className: undefined,\n    target: undefined,\n    label: undefined,\n    tipLabel: undefined,\n    extent: undefined\n  };\n\n  public events: ZoomToExtentEvents = {\n    'change': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, ZoomToExtentProps>(this.options, this.props);\n    this.control = new ZoomToExtent(options);\n    this.context.controls.push(this.control)\n\n    if (this.props.controlRef) this.props.controlRef(this.control);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.control.on(eventName, olEvents[eventName]);\n    })\n  }\n}","import {GoogleStreetViewPanorama} from './google-street-view-panorama';\nimport {Popup} from './popup';\nimport {ClusterStyle} from './style/cluster-style';\nimport {MarkerStyle} from './style/marker-style';\n// import {GeoCoderControl} from './control/geo-coder-control';\n// import {GeoCoderComponent} from './control/geo-coder-component';\n\nconst custom = {\n  style: {\n    MarkerStyle: MarkerStyle,\n    ClusterStyle: ClusterStyle\n  },\n  control: {\n    // GeoCoderControl: GeoCoderControl,\n    // GeoCoderComponent: GeoCoderComponent\n  },\n  Popup: Popup,\n  GoogleStreetViewPanorama: GoogleStreetViewPanorama\n};\n\nexport {custom};\n\n","import * as GoogleMapsLoader from 'google-maps';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nexport interface GoogleStreetViewPanoramaOptions {\n  position: { lat: number; lng: number },\n  pov: { heading: number; pitch: number },\n  zoom: number\n}\nexport type GoogleStreetViewPanoramaProps = GoogleStreetViewPanoramaOptions;\n\nexport class GoogleStreetViewPanorama extends React.Component<GoogleStreetViewPanoramaProps> {\n\n  public static defaultProps: GoogleStreetViewPanoramaProps = {\n      position: { lat: 46.9171876, lng: 17.8951832 },\n      pov: { heading: 0, pitch: 0 },\n      zoom: 1\n  }\n  public streetView: google.maps.StreetViewPanorama;\n\n  public render() {\n    return (<div style={{ height: '100%' }}></div>);\n  }\n\n  public initialize() {\n    GoogleMapsLoader.load((google: GoogleMapsLoader.google) => {\n      this.streetView = new google.maps.StreetViewPanorama(\n        ReactDOM.findDOMNode(this) as Element,\n        this.props\n      );\n    });\n  }\n\n  public componentDidMount() {\n    this.initialize();\n  }\n\n  public componentDidUpdate() {\n    this.initialize();\n  }\n}","import * as React from 'react';\n\nimport './popup.css';\n\nexport class Popup extends React.Component {\n  private containerEl: React.RefObject<HTMLDivElement>;\n  private contentEl: React.RefObject<HTMLDivElement>;\n  private contentClose: React.RefObject<HTMLAnchorElement>;\n\n  constructor(props: {}) {\n    super(props);\n    this.containerEl = React.createRef<HTMLDivElement>();\n    this.contentEl = React.createRef<HTMLDivElement>();\n    this.contentClose = React.createRef<HTMLAnchorElement>();\n  }\n\n  public componentDidMount() {\n    if (this.contentClose.current) {\n      this.contentClose.current.addEventListener(\"click\", () => {\n        if (this.containerEl.current) {\n          this.containerEl.current.style.display = 'none';\n        }\n      });\n    }\n  }\n\n  public render() {\n    return (\n      <div className=\"olPopup\" ref={this.containerEl}>\n        <a\n          className=\"olPopupCloser\" role=\"button\"\n          href=\"javascript:void(0)\"\n          ref={this.contentClose}\n        ></a>\n        <div className=\"olPopupContents\" ref={this.contentEl}></div>\n      </div>\n    );\n  }\n\n  public setContents(html: string) {\n    if (this.contentEl.current) {\n      // tslint:disable-next-line\n      this.contentEl.current.innerHTML = html;\n    }\n  }\n\n  public show(bottomDistance: string = '12px') {\n    if (this.containerEl.current) {\n      this.containerEl.current.style.bottom = bottomDistance;\n      this.containerEl.current.style.display = 'block';\n    }\n  }\n}","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js!./popup.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js!./popup.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js!./popup.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".olPopup {\\n  display: none;\\n  position: absolute;\\n  background-color: white;\\n  -moz-box-shadow: 0 1px 4px rgba(0,0,0,0.2);\\n  -webkit-filter: drop-shadow(0 1px 4px rgba(0,0,0,0.2));\\n  filter: drop-shadow(0 1px 4px rgba(0,0,0,0.2));\\n  padding: 15px;\\n  border-radius: 10px;\\n  border: 1px solid #cccccc;\\n  bottom: 12px;\\n  left: -50px;\\n  min-width: 150px;\\n}\\n.olPopup:after, .olPopup:before {\\n  top: 100%;\\n  border: solid transparent;\\n  content: \\\" \\\";\\n  height: 0;\\n  width: 0;\\n  position: absolute;\\n  pointer-events: none;\\n}\\n.olPopup:after {\\n  border-top-color: white;\\n  border-width: 10px;\\n  left: 48px;\\n  margin-left: -10px;\\n}\\n.olPopup:before {\\n  border-top-color: #cccccc;\\n  border-width: 11px;\\n  left: 48px;\\n  margin-left: -11px;\\n}\\n.olPopupCloser {\\n  text-decoration: none;\\n  position: absolute;\\n  top: 2px;\\n  right: 8px;\\n}\\n.olPopupCloser:after {\\n  content: \\\"✖\\\";\\n}\\n\", \"\"]);\n\n","import Extent from 'ol/extent'\nimport Feature from 'ol/Feature'\nimport VectorSource from 'ol/source/Vector'\nimport CircleStyle from 'ol/style/circle'\nimport FillStyle from 'ol/style/Fill'\nimport RegularShapeStyle from 'ol/style/RegularShape'\nimport StrokeStyle from 'ol/style/Stroke'\nimport Style from 'ol/style/Style'\nimport TextStyle from 'ol/style/Text'\n\nexport class ClusterStyle {\n\n  public maxFeatureCount: number;\n  public currentResolution: number;\n  public source: VectorSource;\n\n  constructor(vectorSource: VectorSource) {\n    this.source = vectorSource;\n  }\n\n  public vectorStyleFunction = (feature: Feature, resolution: number) => {\n    if (resolution !== this.currentResolution) {\n      this.calculateClusterInfo(resolution);\n      this.currentResolution = resolution;\n    }\n    let style;\n    const size = feature.get('features').length;\n    if (size > 1) {\n      style = new Style({\n        image: new CircleStyle({\n          radius: feature.get('radius'),\n          fill: new FillStyle({\n            color: [255, 153, 0, Math.min(0.8, (size / this.maxFeatureCount) + 0.4)]\n          })\n        }),\n        text: new TextStyle({\n          text: size.toString(),\n          fill: new FillStyle({ color: '#fff' }),\n          stroke: new StrokeStyle({ color: 'rgba(0, 0, 0, 0.6)', width: 3 })\n        })\n      });\n    } else {\n      const originalFeature = feature.get('features')[0];\n      style = this.createClusterStyle(originalFeature);\n    }\n\n    return style;\n  };\n\n  public selectStyleFunction = (feature: Feature) => {\n    const invisibleFill = new FillStyle({ color: 'rgba(255, 255, 255, 0.01)' });\n    const styles = [new Style({\n      image: new CircleStyle({\n        radius: feature.get('radius'),\n        fill: invisibleFill\n      })\n    })];\n    const originalFeatures = feature.get('features');\n    let originalFeature;\n\n    for (let i = originalFeatures.length - 1; i >= 0; i = i - 1) {\n      originalFeature = originalFeatures[i];\n      styles.push(this.createClusterStyle(originalFeature));\n    }\n\n    return styles;\n  };\n\n  private calculateClusterInfo(resolution: number) {\n    this.maxFeatureCount = 0;\n    const features = this.source.getFeatures();\n    let feature;\n    let radius;\n    for (let i = features.length - 1; i >= 0; i = i - 1) {\n      feature = features[i];\n      const originalFeatures = feature.get('features');\n      const extent = Extent.createEmpty();\n      let j;\n      let jj;\n      // tslint:disable-next-line\n      for (j = 0, jj = originalFeatures.length; j < jj; j = j + 1) {\n        Extent.extend(extent, originalFeatures[j].getGeometry().getExtent());\n      }\n      this.maxFeatureCount = Math.max(this.maxFeatureCount, jj);\n      radius = (Extent.getWidth(extent) + Extent.getHeight(extent)) * 0.25 /\n          resolution;\n      feature.set('radius', radius);\n    }\n  }\n\n  private createClusterStyle(feature: Feature) {\n    const clusterFill = new FillStyle({ color: 'rgba(255, 153, 0, 0.8)' });\n    const clusterStroke = new StrokeStyle({ color: 'rgba(255, 204, 0, 0.2)', width: 1 });\n    // 2012_Earthquakes_Mag5.kml stores the magnitude of each earthquake in a\n    // standards-violating <magnitude> tag in each Placemark.  We extract it\n    // from the Placemark's name instead.\n    const name = feature.get('name');\n    const magnitude = parseFloat(name.substr(2));\n    const radius = (magnitude - 5) * 20 + 5;\n\n    return new Style({\n      geometry: feature.getGeometry(),\n      image: new RegularShapeStyle({\n        radius1: radius,\n        radius2: 3,\n        points: 5,\n        angle: Math.PI,\n        fill: clusterFill,\n        stroke: clusterStroke\n      })\n    });\n  }\n}","import IconStyle from 'ol/style/icon';\nimport Style from 'ol/style/Style';\n\nexport class MarkerStyle {\n  public src: string = 'https://openlayers.org/en/v4.6.5/examples/data/icon.png';\n\n  public style: Style = new Style({\n    image: new IconStyle({\n      src: this.src\n    })\n  })\n\n  constructor(src?: string) {\n    if (src) {\n      this.src = src;\n    }\n  }\n\n  public selectStyleFunction = ()  => {\n    return new Style({\n      image: new IconStyle({\n          anchor: [0.5, 0.96],\n          color: '#4271AE',\n          src: 'https://openlayers.org/en/v4.6.5/examples/data/dot.png'\n        })\n    })\n  };\n}","import { DoubleClickZoomReact } from './double-click-zoom';\nimport { DragAndDropReact } from './drag-and-drop';\nimport { DragBoxReact } from './drag-box';\nimport { DragPanReact } from './drag-pan';\nimport { DragRotateReact } from './drag-rotate';\nimport { DragRotateAndZoomReact } from './drag-rotate-and-zoom';\nimport { DragZoomReact } from './drag-zoom';\nimport { DrawReact } from './draw';\nimport { ExtentReact } from './extent';\nimport { Interactions } from './interactions';\nimport { KeyboardPanReact } from './keyboard-pan';\nimport { KeyboardZoomReact } from './keyboard-zoom';\nimport { ModifyReact } from './modify';\nimport { MouseWheelZoomReact } from './mouse-wheel-zoom';\nimport { PinchRotateReact } from './pinch-rotate';\nimport { PinchZoomReact } from './pinch-zoom';\nimport { PointerReact } from './pointer';\nimport { SelectReact } from './select';\nimport { SnapReact } from './snap';\nimport { TranslateReact } from './translate';\nimport Interaction from 'ol/interaction/Interaction';\n\nexport interface InteractionType<T extends Interaction> {\n  active?:boolean\n  interactionRef?(ref:T):void,\n}\n\nconst interaction = {\n  DoubleClickZoomReact,\n  DragAndDropReact,\n  DragBoxReact,\n  DragPanReact,\n  DragRotateReact,\n  DragRotateAndZoomReact,\n  DragZoomReact,\n  DrawReact,\n  ExtentReact,\n  KeyboardPanReact,\n  KeyboardZoomReact,\n  ModifyReact,\n  MouseWheelZoomReact,\n  PinchRotateReact,\n  PinchZoomReact,\n  PointerReact,\n  SelectReact,\n  SnapReact,\n  TranslateReact\n};\n\nexport {\n  Interactions,\n  interaction\n};\n\n","import * as React from 'react';\n\nimport DoubleClickZoom, { Options } from 'ol/interaction/DoubleClickZoom';\n\nimport { InteractionType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface DoubleClickZoomProps extends Options, InteractionType<DoubleClickZoom> {\n  onChange?: ReactOpenlayersEvent\n  onChangeActive?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n}\n\nexport interface DoubleClickZoomEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'change:active': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n}\n\nexport class DoubleClickZoomReact extends React.Component<DoubleClickZoomProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public interaction: DoubleClickZoom;\n\n  public options: Options = {\n    duration: undefined,\n    delta: undefined\n  };\n\n  public events: DoubleClickZoomEvents = {\n    'change': undefined,\n    'change:active': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, DoubleClickZoomProps>(this.options, this.props);\n    this.interaction = new DoubleClickZoom(options);\n    this.context.interactions.push(this.interaction)\n\n    this.initInteraction(this.props);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.interaction.on(eventName, olEvents[eventName]);\n    });\n  }\n\n  public componentWillReceiveProps(nextProps: DoubleClickZoomProps) {\n    if (nextProps !== this.props) {\n      this.context.map.removeInteraction(this.interaction);\n      const options = Util.getOptions<Options, DoubleClickZoomProps>(this.options, nextProps);\n      this.interaction = new DoubleClickZoom(options);\n      this.context.map.addInteraction(this.interaction);\n\n      this.initInteraction(nextProps);\n\n      const olEvents = Util.getEvents(this.events, this.props);\n      Object.keys(olEvents).forEach((eventName: string) => {\n        this.interaction.on(eventName, olEvents[eventName]);\n      });\n    }\n  }\n\n  public componentWillUnmount() {\n    this.context.map.removeInteraction(this.interaction);\n  }\n\n  private initInteraction(props: DoubleClickZoomProps) {\n    if (props.interactionRef) props.interactionRef(this.interaction);\n    if (props.active !== undefined) this.interaction.setActive(props.active);\n  }\n}","import * as React from 'react';\n\nimport DragAndDrop, { Options, DragAndDropEvent } from 'ol/interaction/DragAndDrop';\n\nimport { InteractionType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface DragAndDropProps extends Options, InteractionType<DragAndDrop> {\n  onAddfeatures?: ReactOpenlayersEvent<DragAndDropEvent>\n  onChange?: ReactOpenlayersEvent\n  onChangeActive?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n}\n\nexport interface DragAndDropEvents extends ReactOpenlayersEvents {\n  'addfeatures': ReactOpenlayersEvent<DragAndDropEvent>\n  'change': ReactOpenlayersEvent\n  'change:active': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n}\n\nexport class DragAndDropReact extends React.Component<DragAndDropProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public interaction: DragAndDrop;\n\n  public options: Options = {\n    formatConstructors: undefined,\n    projection: undefined,\n    target: undefined\n  };\n\n  public events: DragAndDropEvents = {\n    'addfeatures': undefined,\n    'change': undefined,\n    'change:active': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, DragAndDropProps>(this.options, this.props);\n    this.interaction = new DragAndDrop(options);\n    this.context.interactions.push(this.interaction)\n\n    this.initInteraction(this.props);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.interaction.on(eventName, olEvents[eventName]);\n    });\n  }\n\n  public componentWillReceiveProps(nextProps: DragAndDropProps) {\n    if (nextProps !== this.props) {\n      this.context.map.removeInteraction(this.interaction);\n      const options = Util.getOptions<Options, DragAndDropProps>(this.options, nextProps);\n      this.interaction = new DragAndDrop(options);\n      this.context.map.addInteraction(this.interaction);\n\n      this.initInteraction(nextProps);\n\n      const olEvents = Util.getEvents(this.events, this.props);\n      Object.keys(olEvents).forEach((eventName: string) => {\n        this.interaction.on(eventName, olEvents[eventName]);\n      });\n    }\n  }\n\n  public componentWillUnmount() {\n    this.context.map.removeInteraction(this.interaction);\n  }\n\n  private initInteraction(props: DragAndDropProps) {\n    if (props.interactionRef) props.interactionRef(this.interaction);\n    if (props.active !== undefined) this.interaction.setActive(props.active);\n  }\n}","import * as React from 'react';\n\nimport DragBox, { DragBoxEvent, Options } from 'ol/interaction/DragBox';\n\nimport { InteractionType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface DragBoxProps extends Options, InteractionType<DragBox> {\n  onBoxdrag?: ReactOpenlayersEvent<DragBoxEvent>\n  onBoxend?: ReactOpenlayersEvent<DragBoxEvent>\n  onBoxstart?: ReactOpenlayersEvent<DragBoxEvent>\n  onChange?: ReactOpenlayersEvent\n  onChangeActive?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n};\n\nexport interface DragBoxEvents extends ReactOpenlayersEvents {\n  'boxdrag': ReactOpenlayersEvent<DragBoxEvent>\n  'boxend': ReactOpenlayersEvent<DragBoxEvent>\n  'boxstart': ReactOpenlayersEvent<DragBoxEvent>\n  'change': ReactOpenlayersEvent\n  'change:active': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n}\n\nexport class DragBoxReact extends React.Component<DragBoxProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public interaction: DragBox;\n\n  public options: Options = {\n    className: undefined,\n    condition: undefined,\n    boxEndCondition: undefined\n  };\n\n  public events: DragBoxEvents = {\n    'boxdrag': undefined,\n    'boxend': undefined,\n    'boxstart': undefined,\n    'change': undefined,\n    'change:active': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, DragBoxProps>(this.options, this.props);\n    this.interaction = new DragBox(options);\n    this.context.interactions.push(this.interaction)\n\n    this.initInteraction(this.props);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.interaction.on(eventName, olEvents[eventName]);\n    });\n  }\n\n  public componentWillReceiveProps(nextProps: DragBoxProps) {\n    if (nextProps !== this.props) {\n      this.context.map.removeInteraction(this.interaction);\n      const options = Util.getOptions<Options, DragBoxProps>(this.options, nextProps);\n      this.interaction = new DragBox(options);\n      this.context.map.addInteraction(this.interaction);\n\n      this.initInteraction(nextProps);\n\n      const olEvents = Util.getEvents(this.events, this.props);\n      Object.keys(olEvents).forEach((eventName: string) => {\n        this.interaction.on(eventName, olEvents[eventName]);\n      })\n    }\n  }\n\n  public componentWillUnmount() {\n    this.context.map.removeInteraction(this.interaction);\n  }\n\n  private initInteraction(props: DragBoxProps) {\n    if (props.interactionRef) props.interactionRef(this.interaction);\n    if (props.active !== undefined) this.interaction.setActive(props.active);\n  }\n}","import * as React from 'react';\n\nimport DragPan, { Options } from 'ol/interaction/DragPan';\n\nimport { InteractionType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface DragPanProps extends Options, InteractionType<DragPan> {\n  onChange?: ReactOpenlayersEvent\n  onChangeActive?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n};\n\nexport interface DragPanEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'change:active': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n}\n\n\nexport class DragPanReact extends React.Component<DragPanProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public interaction: DragPan;\n\n  public options: DragPanProps = {\n    condition: undefined,\n    kinetic: undefined\n  };\n\n  public events: DragPanEvents = {\n    'change': undefined,\n    'change:active': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, DragPanProps>(this.options, this.props);\n    this.interaction = new DragPan(options);\n    this.context.interactions.push(this.interaction)\n\n    this.initInteraction(this.props);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.interaction.on(eventName, olEvents[eventName]);\n    })\n  }\n\n  public componentWillReceiveProps(nextProps: DragPanProps) {\n    console.log(this.context.map)\n    \n    if (nextProps !== this.props) {\n      this.context.map.removeInteraction(this.interaction);\n      const options = Util.getOptions<Options, DragPanProps>(this.options, nextProps);\n      this.interaction = new DragPan(options);\n      this.context.map.addInteraction(this.interaction);\n\n      this.initInteraction(nextProps);\n\n      const olEvents = Util.getEvents(this.events, this.props);\n      Object.keys(olEvents).forEach((eventName: string) => {\n        this.interaction.on(eventName, olEvents[eventName]);\n      });\n    }\n  }\n\n  public componentWillUnmount() {\n    this.context.map.removeInteraction(this.interaction);\n  }\n\n  private initInteraction(props: DragPanProps) {\n    if (props.interactionRef) props.interactionRef(this.interaction);\n    if (props.active !== undefined) this.interaction.setActive(props.active);\n  }\n\n}","import * as React from 'react';\n\nimport DragRotate, { Options } from 'ol/interaction/DragRotate';\n\nimport { InteractionType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface DragRotateProps extends Options, InteractionType<DragRotate> {\n  onChange?: ReactOpenlayersEvent\n  onChangeActive?: ReactOpenlayersEvent\n  onpropertychange?: ReactOpenlayersEvent\n};\n\nexport interface DragRotateEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'change:active': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n};\n\nexport class DragRotateReact extends React.Component<DragRotateProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public interaction: DragRotate;\n\n  public options: DragRotateProps = {\n    condition: undefined,\n    duration: undefined\n  };\n\n  public events: DragRotateEvents = {\n    'change': undefined,\n    'change:active': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, DragRotateProps>(this.options, this.props);\n    this.interaction = new DragRotate(options);\n    this.context.interactions.push(this.interaction)\n\n    this.initInteraction(this.props);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.interaction.on(eventName, olEvents[eventName]);\n    });\n  }\n\n  public componentWillReceiveProps(nextProps: DragRotateProps) {\n    if (nextProps !== this.props) {\n      this.context.map.removeInteraction(this.interaction);\n      const options = Util.getOptions<Options, DragRotateProps>(this.options, nextProps);\n      this.interaction = new DragRotate(options);\n      this.context.map.addInteraction(this.interaction);\n\n      this.initInteraction(nextProps);\n\n      const olEvents = Util.getEvents(this.events, this.props);\n      Object.keys(olEvents).forEach((eventName: string) => {\n        this.interaction.on(eventName, olEvents[eventName]);\n      });\n    }\n  }\n\n  public componentWillUnmount() {\n    this.context.map.removeInteraction(this.interaction);\n  }\n\n  private initInteraction(props: DragRotateProps) {\n    if (props.interactionRef) props.interactionRef(this.interaction);\n    if (props.active !== undefined) this.interaction.setActive(props.active);\n  }\n}","import * as React from 'react';\n\nimport DragRotateAndZoom, { Options } from 'ol/interaction/DragRotateAndZoom';\n\nimport { InteractionType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface DragRotateAndZoomProps extends Options, InteractionType<DragRotateAndZoom> {\n  onChange?: ReactOpenlayersEvent\n  onChangeActive?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n};\n\nexport interface DragRotateAndZoomEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'change:active': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n}\nexport class DragRotateAndZoomReact extends React.Component<DragRotateAndZoomProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public interaction: DragRotateAndZoom;\n\n  public options: DragRotateAndZoomProps = {\n    condition: undefined,\n    duration: undefined\n  };\n\n  public events: DragRotateAndZoomEvents = {\n    'change': undefined,\n    'change:active': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, DragRotateAndZoomProps>(this.options, this.props);\n    this.interaction = new DragRotateAndZoom(options);\n    this.context.interactions.push(this.interaction)\n\n    this.initInteraction(this.props);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.interaction.on(eventName, olEvents[eventName]);\n    });\n  }\n\n  public componentWillReceiveProps(nextProps: DragRotateAndZoomProps) {\n    if (nextProps !== this.props) {\n      this.context.map.removeInteraction(this.interaction);\n      const options = Util.getOptions<Options, DragRotateAndZoomProps>(this.options, nextProps);\n      this.interaction = new DragRotateAndZoom(options);\n      this.context.map.addInteraction(this.interaction);\n\n      this.initInteraction(nextProps);\n\n      const olEvents = Util.getEvents(this.events, this.props);\n      Object.keys(olEvents).forEach((eventName: string) => {\n        this.interaction.on(eventName, olEvents[eventName]);\n      })\n    }\n  }\n\n  public componentWillUnmount() {\n    this.context.map.removeInteraction(this.interaction);\n  }\n\n  private initInteraction(props: DragRotateAndZoomProps) {\n    if (props.interactionRef) props.interactionRef(this.interaction);\n    if (props.active !== undefined) this.interaction.setActive(props.active);\n  }\n}","import * as React from 'react';\n\nimport DragZoom, { Options } from 'ol/interaction/DragZoom';\n\nimport { InteractionType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface DragZoomProps extends Options, InteractionType<DragZoom> {\n  onBoxdrag?: ReactOpenlayersEvent\n  onBoxend?: ReactOpenlayersEvent\n  onBoxstart?: ReactOpenlayersEvent\n  onChange?: ReactOpenlayersEvent\n  onChangeActive?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n};\n\nexport interface DragZoomEvents extends ReactOpenlayersEvents {\n  'boxdrag': ReactOpenlayersEvent\n  'boxend': ReactOpenlayersEvent\n  'boxstart': ReactOpenlayersEvent\n  'change': ReactOpenlayersEvent\n  'change:active': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n};\n\nexport class DragZoomReact extends React.Component<DragZoomProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public interaction: DragZoom;\n\n  public options: DragZoomProps = {\n    className: undefined,\n    condition: undefined,\n    duration: undefined,\n    out: undefined\n  };\n\n  public events: DragZoomEvents = {\n    'boxdrag': undefined,\n    'boxend': undefined,\n    'boxstart': undefined,\n    'change': undefined,\n    'change:active': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, DragZoomProps>(this.options, this.props);\n    this.interaction = new DragZoom(options);\n    this.context.interactions.push(this.interaction)\n\n    this.initInteraction(this.props);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.interaction.on(eventName, olEvents[eventName]);\n    });\n  }\n\n  public componentWillReceiveProps(nextProps: DragZoomProps) {\n    if (nextProps !== this.props) {\n      this.context.map.removeInteraction(this.interaction);\n      const options = Util.getOptions<Options, DragZoomProps>(this.options, nextProps);\n      this.interaction = new DragZoom(options);\n      this.context.map.addInteraction(this.interaction);\n\n      this.initInteraction(nextProps);\n\n      const olEvents = Util.getEvents(this.events, this.props);\n      Object.keys(olEvents).forEach((eventName: string) => {\n        this.interaction.on(eventName, olEvents[eventName]);\n      })\n    }\n  }\n\n  public componentWillUnmount() {\n    this.context.map.removeInteraction(this.interaction);\n  }\n\n  private initInteraction(props: DragZoomProps) {\n    if (props.interactionRef) props.interactionRef(this.interaction);\n    if (props.active !== undefined) this.interaction.setActive(props.active);\n  }\n\n}","import * as React from 'react';\n\nimport Draw, { Options } from 'ol/interaction/Draw';\nimport GeometryType from 'ol/geom/GeometryType';\n\nimport { InteractionType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface DrawProps extends Options, InteractionType<Draw> {\n  onChange?: ReactOpenlayersEvent\n  onChangeActive?: ReactOpenlayersEvent\n  onDrawend?: ReactOpenlayersEvent\n  onDrawstart?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n}\n\nexport interface DrawEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'change:active': ReactOpenlayersEvent\n  'drawend': ReactOpenlayersEvent\n  'drawstart': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n}\n\nexport class DrawReact extends React.Component<DrawProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public interaction: Draw;\n\n  public options: Options = {\n    clickTolerance: undefined,\n    features: undefined,\n    source: undefined,\n    snapTolerance: undefined,\n    type: GeometryType.POINT,\n    maxPoints: undefined,\n    minPoints: undefined,\n    finishCondition: undefined,\n    style: undefined,\n    geometryFunction: undefined,\n    geometryName: undefined,\n    condition: undefined,\n    freehand: undefined,\n    freehandCondition: undefined,\n    wrapX: undefined\n  };\n\n  public events: DrawEvents = {\n    'change': undefined,\n    'change:active': undefined,\n    'drawend': undefined,\n    'drawstart': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, DrawProps>(this.options, this.props);\n    this.interaction = new Draw(options);\n    this.context.interactions.push(this.interaction);\n\n    this.initInteraction(this.props);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.interaction.on(eventName, olEvents[eventName]);\n    });\n  }\n\n  public componentWillReceiveProps(nextProps: DrawProps) {\n    if (nextProps !== this.props) {\n      this.context.map.removeInteraction(this.interaction);\n      const options = Util.getOptions<Options, DrawProps>(this.options, nextProps);\n      this.interaction = new Draw(options);\n      this.context.map.addInteraction(this.interaction);\n\n      this.initInteraction(nextProps);\n\n      const olEvents = Util.getEvents(this.events, this.props);\n      Object.keys(olEvents).forEach((eventName: string) => {\n        this.interaction.on(eventName, olEvents[eventName]);\n      })\n    }\n  }\n\n  public componentWillUnmount() {\n    this.context.map.removeInteraction(this.interaction);\n  }\n\n  private initInteraction(props: DrawProps) {\n    if (props.interactionRef) props.interactionRef(this.interaction);\n    if (props.active !== undefined) this.interaction.setActive(props.active);\n  }\n\n}","import * as React from 'react';\n\nimport Extent from 'ol/interaction/Extent';\n\nimport { InteractionType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport type ExtentOptions = olFix.olx.interaction.ExtentOptions;\nexport interface ExtentProps extends ExtentOptions, InteractionType<Extent> {\n  onEvent?: ReactOpenlayersEvent\n  onChange?: ReactOpenlayersEvent\n  onChangeActive?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n};\n\nexport interface ExtentEvents extends ReactOpenlayersEvents {\n  'Event': ReactOpenlayersEvent\n  'change': ReactOpenlayersEvent\n  'change:active': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n};\n\nexport class ExtentReact extends React.Component<ExtentProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public interaction: Extent;\n\n  public options: ExtentOptions = {\n    extent: undefined,\n    boxStyle: undefined,\n    pixelTolerance: undefined,\n    pointerStyle: undefined,\n    wrapX: undefined\n  };\n\n  public events: ExtentEvents = {\n    'Event': undefined,\n    'change': undefined,\n    'change:active': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<ExtentOptions, ExtentProps>(this.options, this.props);\n    this.interaction = new Extent(options);\n    this.context.interactions.push(this.interaction)\n\n    this.initInteraction(this.props);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.interaction.on(eventName, olEvents[eventName]);\n    });\n  }\n\n  public componentWillReceiveProps(nextProps: ExtentProps) {\n    if (nextProps !== this.props) {\n      this.context.map.removeInteraction(this.interaction);\n      const options = Util.getOptions<ExtentOptions, ExtentProps>(this.options, nextProps);\n      this.interaction = new Extent(options);\n      this.context.map.addInteraction(this.interaction);\n\n      this.initInteraction(nextProps);\n\n      const olEvents = Util.getEvents(this.events, this.props);\n      Object.keys(olEvents).forEach((eventName: string) => {\n        this.interaction.on(eventName, olEvents[eventName]);\n      })\n    }\n  }\n\n  public componentWillUnmount() {\n    this.context.map.removeInteraction(this.interaction);\n  }\n\n  public initInteraction(props: ExtentProps) {\n    if (props.interactionRef) props.interactionRef(this.interaction);\n    if (props.active !== undefined) this.interaction.setActive(props.active);\n  }\n}","import * as React from 'react'; \n\nimport { DefaultsOptions } from 'ol/interaction';\n\n\nexport type InteractionsProps = DefaultsOptions;\n\nexport class Interactions extends React.Component<InteractionsProps> {\n  public render() {\n    return (<div>{this.props.children}</div>);\n  }\n}","import * as React from 'react';\n\nimport KeyboardPan, { Options } from 'ol/interaction/KeyboardPan';\n\nimport { InteractionType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface KeyboardPanProps extends Options, InteractionType<KeyboardPan> {\n  onChange?: ReactOpenlayersEvent\n  onChangeActive?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n}\n\nexport interface KeyboardPanEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'change:active': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n}\n\nexport class KeyboardPanReact extends React.Component<KeyboardPanProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public interaction: KeyboardPan;\n\n  public options: Options = {\n    condition: undefined,\n    duration: undefined,\n    pixelDelta: undefined\n  };\n\n  public events: KeyboardPanEvents = {\n    'change': undefined,\n    'change:active': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, KeyboardPanProps>(this.options, this.props);\n    this.interaction = new KeyboardPan(options);\n    this.context.interactions.push(this.interaction)\n\n    this.initInteraction(this.props);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.interaction.on(eventName, olEvents[eventName]);\n    });\n  }\n\n  public componentWillReceiveProps(nextProps: KeyboardPanProps) {\n    if (nextProps !== this.props) {\n      this.context.map.removeInteraction(this.interaction);\n      const options = Util.getOptions<Options, KeyboardPanProps>(this.options, nextProps);\n      this.interaction = new KeyboardPan(options);\n      this.context.map.addInteraction(this.interaction);\n\n      this.initInteraction(nextProps);\n\n      const olEvents = Util.getEvents(this.events, this.props);\n      Object.keys(olEvents).forEach((eventName: string) => {\n        this.interaction.on(eventName, olEvents[eventName]);\n      })\n    }\n  }\n\n  public componentWillUnmount() {\n    this.context.map.removeInteraction(this.interaction);\n  }\n\n  private initInteraction(props: KeyboardPanProps) {\n    if (props.interactionRef) props.interactionRef(this.interaction);\n    if (props.active !== undefined) this.interaction.setActive(props.active);\n  }\n}","import * as React from 'react';\n\nimport KeyboardZoom, { Options } from 'ol/interaction/KeyboardZoom';\n\nimport { InteractionType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface KeyboardZoomProps extends Options, InteractionType<KeyboardZoom> {\n  onChange?: ReactOpenlayersEvent\n  onChangeActive?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n};\n\nexport interface KeyboardZoomEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'change:active': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n};\n\nexport class KeyboardZoomReact extends React.Component<KeyboardZoomProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public interaction: KeyboardZoom;\n\n  public options: Options = {\n    condition: undefined,\n    duration: undefined,\n    delta: undefined\n  };\n\n  public events: KeyboardZoomEvents = {\n    'change': undefined,\n    'change:active': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, KeyboardZoomProps>(this.options, this.props);\n    this.interaction = new KeyboardZoom(options);\n    this.context.interactions.push(this.interaction)\n\n    this.initInteraction(this.props);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.interaction.on(eventName, olEvents[eventName]);\n    })\n  }\n\n  public componentWillReceiveProps(nextProps: KeyboardZoomProps) {\n    if (nextProps !== this.props) {\n      this.context.map.removeInteraction(this.interaction);\n      const options = Util.getOptions<Options, KeyboardZoomProps>(this.options, nextProps);\n      this.interaction = new KeyboardZoom(options);\n      this.context.map.addInteraction(this.interaction);\n\n      this.initInteraction(nextProps);\n\n      const olEvents = Util.getEvents(this.events, this.props);\n      Object.keys(olEvents).forEach((eventName: string) => {\n        this.interaction.on(eventName, olEvents[eventName]);\n      })\n    }\n  }\n\n  public componentWillUnmount() {\n    this.context.map.removeInteraction(this.interaction);\n  }\n\n  public initInteraction(props: KeyboardZoomProps) {\n    if (props.interactionRef) props.interactionRef(this.interaction);\n    if (props.active !== undefined) this.interaction.setActive(props.active);\n  }\n\n}","import * as React from 'react';\n\nimport Modify, { Options } from 'ol/interaction/Modify';\n\nimport { InteractionType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface ModifyProps extends Options, InteractionType<Modify> {\n  onChange?: ReactOpenlayersEvent\n  onChangeActive?: ReactOpenlayersEvent\n  onModifyend?: ReactOpenlayersEvent\n  onModifystart?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n};\n\nexport interface ModifyEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'change:active': ReactOpenlayersEvent\n  'modifyend': ReactOpenlayersEvent\n  'modifystart': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n};\n\nexport class ModifyReact extends React.Component<ModifyProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public interaction: Modify;\n\n  public options: Options = {\n    condition: undefined,\n    deleteCondition: undefined,\n    pixelTolerance: undefined,\n    style: undefined,\n    features: undefined,\n    wrapX: undefined\n  };\n\n  public events: ModifyEvents = {\n    'change': undefined,\n    'change:active': undefined,\n    'modifyend': undefined,\n    'modifystart': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, ModifyProps>(this.options, this.props);\n    this.interaction = new Modify(options);\n    this.context.interactions.push(this.interaction);\n\n    this.initInteraction(this.props);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.interaction.on(eventName, olEvents[eventName]);\n    });\n  }\n\n  public componentWillReceiveProps(nextProps: ModifyProps) {\n    if (nextProps !== this.props) {\n      this.context.map.removeInteraction(this.interaction);\n      const options = Util.getOptions<Options, ModifyProps>(this.options, nextProps);\n      this.interaction = new Modify(options);\n      this.context.map.addInteraction(this.interaction);\n\n      this.initInteraction(nextProps);\n\n      const olEvents = Util.getEvents(this.events, this.props);\n      Object.keys(olEvents).forEach((eventName: string) => {\n        this.interaction.on(eventName, olEvents[eventName]);\n      })\n    }\n  }\n\n  public componentWillUnmount() {\n    this.context.map.removeInteraction(this.interaction);\n  }\n\n  private initInteraction(props: ModifyProps) {\n    if (props.interactionRef) props.interactionRef(this.interaction);\n    if (props.active !== undefined) this.interaction.setActive(props.active);\n  }\n}","import * as React from 'react';\n\nimport MouseWheelZoom, { Options } from 'ol/interaction/MouseWheelZoom';\n\nimport { InteractionType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface MouseWheelZoomProps extends Options, InteractionType<MouseWheelZoom> {\n  onChange?: ReactOpenlayersEvent\n  onChangeActive?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n};\n\nexport interface MouseWheelZoomEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'change:active': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n};\n\nexport class MouseWheelZoomReact extends React.Component<MouseWheelZoomProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public interaction: MouseWheelZoom;\n\n  public options: Options = {\n    duration: undefined,\n    timeout: undefined,\n    useAnchor: undefined\n  };\n\n  public events: MouseWheelZoomEvents = {\n    'change': undefined,\n    'change:active': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, MouseWheelZoomProps>(this.options, this.props);\n    this.interaction = new MouseWheelZoom(options);\n    this.context.interactions.push(this.interaction)\n\n    this.initInteraction(this.props);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.interaction.on(eventName, olEvents[eventName]);\n    })\n  }\n\n  public componentWillReceiveProps(nextProps: MouseWheelZoomProps) {\n    if (nextProps !== this.props) {\n      this.context.map.removeInteraction(this.interaction);\n      const options = Util.getOptions<Options, MouseWheelZoomProps>(this.options, nextProps);\n      this.interaction = new MouseWheelZoom(options);\n      this.context.map.addInteraction(this.interaction);\n\n      this.initInteraction(nextProps);\n\n      const olEvents = Util.getEvents(this.events, this.props);\n      Object.keys(olEvents).forEach((eventName: string) => {\n        this.interaction.on(eventName, olEvents[eventName]);\n      });\n    }\n  }\n\n  public componentWillUnmount() {\n    this.context.map.removeInteraction(this.interaction);\n  }\n\n  private initInteraction(props: MouseWheelZoomProps) {\n    if (props.interactionRef) props.interactionRef(this.interaction);\n    if (props.active !== undefined) this.interaction.setActive(props.active);\n  }\n}","import * as React from 'react';\n\nimport PinchRotate, { Options } from 'ol/interaction/PinchRotate';\n\nimport { InteractionType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface PinchRotateProps extends Options, InteractionType<PinchRotate> {\n  onChange?: ReactOpenlayersEvent\n  onChangeActive?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n};\nexport interface PinchRotateEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'change:active': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n};\n\nexport class PinchRotateReact extends React.Component<PinchRotateProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public interaction: PinchRotate;\n\n  public options: Options = {\n    duration: undefined,\n    threshold: undefined\n  };\n\n  public events: PinchRotateEvents = {\n    'change': undefined,\n    'change:active': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, PinchRotateProps>(this.options, this.props);\n    this.interaction = new PinchRotate(options);\n    this.context.interactions.push(this.interaction)\n\n    this.initInteraction(this.props);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(this.events).forEach((eventName: string) => {\n      this.interaction.on(eventName, olEvents[eventName]);\n    });\n  }\n\n  public componentWillReceiveProps(nextProps: PinchRotateProps) {\n    if (nextProps !== this.props) {\n      this.context.map.removeInteraction(this.interaction);\n      const options = Util.getOptions<Options, PinchRotateProps>(this.options, nextProps);\n      this.interaction = new PinchRotate(options);\n      this.context.map.addInteraction(this.interaction);\n\n      this.initInteraction(nextProps);\n\n      const olEvents = Util.getEvents(this.events, this.props);\n      Object.keys(this.events).forEach((eventName: string) => {\n        this.interaction.on(eventName, olEvents[eventName]);\n      });\n    }\n  }\n\n  public componentWillUnmount() {\n    this.context.map.removeInteraction(this.interaction);\n  }\n\n  private initInteraction(props: PinchRotateProps) {\n    if (props.interactionRef) props.interactionRef(this.interaction);\n    if (props.active !== undefined) this.interaction.setActive(props.active);\n  }\n}","import * as React from 'react';\n\nimport PinchZoom, { Options } from 'ol/interaction/PinchZoom';\n\nimport { InteractionType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface PinchZoomProps extends Options, InteractionType<PinchZoom> {\n  onChange?: ReactOpenlayersEvent\n  onChangeActive?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n};\n\nexport interface PinchZoomEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'change:active': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n};\n\nexport class PinchZoomReact extends React.Component<PinchZoomProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public interaction: PinchZoom;\n\n  public options: Options = {\n    duration: undefined,\n  };\n\n  public events: PinchZoomEvents = {\n    'change': undefined,\n    'change:active': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, PinchZoomProps>(this.options, this.props);\n    this.interaction = new PinchZoom(options);\n    this.context.interactions.push(this.interaction)\n\n    this.initInteraction(this.props);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.interaction.on(eventName, olEvents[eventName]);\n    });\n  }\n\n  public componentWillReceiveProps(nextProps: PinchZoomProps) {\n    if (nextProps !== this.props) {\n      this.context.map.removeInteraction(this.interaction);\n      const options = Util.getOptions<Options, PinchZoomProps>(this.options, nextProps);\n      this.interaction = new PinchZoom(options);\n      this.context.map.addInteraction(this.interaction);\n\n      this.initInteraction(nextProps);\n\n      const olEvents = Util.getEvents(this.events, this.props);\n      Object.keys(olEvents).forEach((eventName: string) => {\n        this.interaction.on(eventName, olEvents[eventName]);\n      });\n    }\n  }\n\n  public componentWillUnmount() {\n    this.context.map.removeInteraction(this.interaction);\n  }\n\n  private initInteraction(props: PinchZoomProps) {\n    if (props.interactionRef) props.interactionRef(this.interaction);\n    if (props.active !== undefined) this.interaction.setActive(props.active);\n  }\n}","import * as React from 'react';\n\nimport Pointer, { Options } from 'ol/interaction/Pointer';\n\nimport { InteractionType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface PointerProps extends Options, InteractionType<Pointer> {\n  onChange?: ReactOpenlayersEvent\n  onChangeActive?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n};\n\nexport interface PointerEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'change:active': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n};\n\nexport class PointerReact extends React.Component<PointerProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public interaction: Pointer;\n\n  public options: Options = {\n    handleDownEvent: undefined,\n    handleDragEvent: undefined,\n    handleEvent: undefined,\n    handleMoveEvent: undefined,\n    handleUpEvent: undefined\n  };\n\n  public events: PointerEvents = {\n    'change': undefined,\n    'change:active': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, PointerProps>(this.options, this.props);\n    this.interaction = new Pointer(options);\n    this.context.interactions.push(this.interaction)\n\n    this.initInteraction(this.props);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(this.events).forEach((eventName: string) => {\n      this.interaction.on(eventName, olEvents[eventName]);\n    });\n  }\n\n  public componentWillReceiveProps(nextProps: PointerProps) {\n    if (nextProps !== this.props) {\n      this.context.map.removeInteraction(this.interaction);\n      const options = Util.getOptions<Options, PointerProps>(this.options, nextProps);\n      this.interaction = new Pointer(options);\n      this.context.map.addInteraction(this.interaction);\n\n      this.initInteraction(nextProps);\n\n      const olEvents = Util.getEvents(this.events, this.props);\n      Object.keys(this.events).forEach((eventName: string) => {\n        this.interaction.on(eventName, olEvents[eventName]);\n      });\n    }\n  }\n\n  public componentWillUnmount() {\n    this.context.map.removeInteraction(this.interaction);\n  }\n\n  private initInteraction(props: PointerProps) {\n    if (props.interactionRef) props.interactionRef(this.interaction);\n    if (props.active !== undefined) this.interaction.setActive(props.active);\n  }\n}","import * as React from 'react';\n\nimport Select, { Options, SelectEvent } from 'ol/interaction/Select';\n\nimport { InteractionType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\n\nexport interface SelectProps extends Options, InteractionType<Select> {\n  instance?: Select;\n  onChange?: ReactOpenlayersEvent\n  onChangeActive?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n  onSelect?: ReactOpenlayersEvent<SelectEvent>\n}\n\nexport interface SelectEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'change:active': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n  'select': ReactOpenlayersEvent\n}\n\nexport class SelectReact extends React.Component<SelectProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public interaction: Select;\n\n  public options: Options = {\n    addCondition: undefined,\n    condition: undefined,\n    layers: undefined,\n    style: undefined,\n    removeCondition: undefined,\n    toggleCondition: undefined,\n    multi: undefined,\n    features: undefined,\n    filter: undefined,\n    hitTolerance: undefined\n  };\n\n  public events: SelectEvents = {\n    'change': undefined,\n    'change:active': undefined,\n    'propertychange': undefined,\n    'select': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    if (this.props.instance) {\n      this.interaction = this.props.instance;\n    } else {\n      const options = Util.getOptions<Options, SelectProps>(this.options, this.props);\n      this.interaction = new Select(options);\n    }\n    this.context.interactions.push(this.interaction)\n\n    this.initInteraction(this.props);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.interaction.on(eventName, olEvents[eventName]);\n    });\n  }\n\n  public componentWillReceiveProps(nextProps: SelectProps) {\n    if (nextProps !== this.props) {\n      this.context.map.removeInteraction(this.interaction);\n\n      if (this.props.instance) {\n        this.interaction = this.props.instance;\n      } else {\n        const options = Util.getOptions<Options, SelectProps>(this.options, nextProps);\n        this.interaction = new Select(options);\n      }\n      this.context.map.addInteraction(this.interaction);\n\n      this.initInteraction(nextProps);\n\n      const olEvents = Util.getEvents(this.events, this.props);\n      Object.keys(olEvents).forEach((eventName: string) => {\n        this.interaction.on(eventName, olEvents[eventName]);\n      });\n    }\n  }\n\n  public componentWillUnmount() {\n    this.context.map.removeInteraction(this.interaction);\n  }\n\n  private initInteraction(props: SelectProps) {\n    if (props.interactionRef) props.interactionRef(this.interaction);\n    if (props.active !== undefined) this.interaction.setActive(props.active);\n  }\n}","import * as React from 'react';\n\nimport Snap, { Options } from 'ol/interaction/Snap';\n\nimport { InteractionType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface SnapProps extends Options, InteractionType<Snap> {\n  onChange?: ReactOpenlayersEvent\n  onChangeActive?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n};\n\nexport interface SnapEvent extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'change:active': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n};\n\nexport class SnapReact extends React.Component<SnapProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public interaction: Snap;\n\n  public options: Options = {\n    features: undefined,\n    edge: undefined,\n    vertex: undefined,\n    pixelTolerance: undefined,\n    source: undefined\n  };\n\n  public events: SnapEvent = {\n    'change': undefined,\n    'change:active': undefined,\n    'propertychange': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, SnapProps>(this.options, this.props);\n    this.interaction = new Snap(options);\n    this.context.interactions.push(this.interaction)\n\n    this.initInteraction(this.props);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.interaction.on(eventName, olEvents[eventName]);\n    });\n  }\n\n  public componentWillReceiveProps(nextProps: SnapProps) {\n    if (nextProps !== this.props) {\n      this.context.map.removeInteraction(this.interaction);\n      const options = Util.getOptions<Options, SnapProps>(this.options, nextProps);\n      this.interaction = new Snap(options);\n      this.context.map.addInteraction(this.interaction);\n\n      this.initInteraction(nextProps);\n\n      const olEvents = Util.getEvents(this.events, this.props);\n      Object.keys(olEvents).forEach((eventName: string) => {\n        this.interaction.on(eventName, olEvents[eventName]);\n      });\n    }\n  }\n\n  public componentWillUnmount() {\n    this.context.map.removeInteraction(this.interaction);\n  }\n\n  private initInteraction(props: SnapProps) {\n    if (props.interactionRef) props.interactionRef(this.interaction);\n    if (props.active !== undefined) this.interaction.setActive(props.active);\n  }\n}","import * as React from 'react';\n\nimport Translate, { Options } from 'ol/interaction/Translate';\n\nimport { InteractionType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface TranslateProps extends Options, InteractionType<Translate> {\n  onChange?: ReactOpenlayersEvent\n  onChangeActive?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n  onTranslateend?: ReactOpenlayersEvent\n  onTranslatestart?: ReactOpenlayersEvent\n  onTranslating?: ReactOpenlayersEvent\n};\nexport interface TranslateEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'change:active': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n  'translateend': ReactOpenlayersEvent\n  'translatestart': ReactOpenlayersEvent\n  'translating': ReactOpenlayersEvent\n};\n\nexport class TranslateReact extends React.Component<TranslateProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public interaction: Translate;\n\n  public options: Options = {\n    features: undefined,\n    layers: undefined\n  };\n\n  public events: TranslateEvents = {\n    'change': undefined,\n    'change:active': undefined,\n    'propertychange': undefined,\n    'translateend': undefined,\n    'translatestart': undefined,\n    'translating': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount () {\n    const options = Util.getOptions<Options, TranslateProps>(this.options, this.props);\n    this.interaction = new Translate(options);\n    this.context.interactions.push(this.interaction)\n\n    this.initInteraction(this.props);\n    \n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.interaction.on(eventName, olEvents[eventName]);\n    });\n  }\n\n  public componentWillReceiveProps(nextProps: TranslateProps) {\n    if (nextProps !== this.props) {\n      this.context.map.removeInteraction(this.interaction);\n      const options = Util.getOptions<Options, TranslateProps>(this.options, nextProps);\n      this.interaction = new Translate(options);\n      this.context.map.addInteraction(this.interaction);\n\n      this.initInteraction(nextProps);\n\n      const olEvents = Util.getEvents(this.events, this.props);\n      Object.keys(olEvents).forEach((eventName: string) => {\n        this.interaction.on(eventName, olEvents[eventName]);\n      });\n    }\n  }\n  \n  public componentWillUnmount () {\n    this.context.map.removeInteraction(this.interaction);\n  }\n\n  private initInteraction(props: TranslateProps) {\n    if (props.interactionRef) props.interactionRef(this.interaction);\n    if (props.active !== undefined) this.interaction.setActive(props.active);\n  }\n}","import {HeatmapReact} from './heatmap';\nimport {ImageReact} from './image';\nimport {Layers} from './layers';\nimport {TileReact} from './tile';\nimport {Vector} from './vector';\nimport Layer from 'ol/layer/Layer';\n\nexport interface LayerType<T extends Layer> {\n  layerRef?(layer:T):void\n}\n\nconst layer = {\n  TileReact: TileReact,\n  Vector: Vector,\n  Heatmap: HeatmapReact,\n  Image: ImageReact,\n};\n\nexport { \n  Layers,\n  layer,\n  HeatmapReact,\n  ImageReact,\n};\n","import * as React from 'react';\n\nimport Heatmap from 'ol/layer/Heatmap';\nimport { Options } from 'ol/layer/Heatmap';\nimport VectorSource from 'ol/source/Vector';\n\nimport { LayerType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface HeatmapProps extends Options, LayerType<Heatmap> {\n  zIndex?: number,\n  onChange?: ReactOpenlayersEvent\n  onChangeBlur?: ReactOpenlayersEvent\n  onChangeExtent?: ReactOpenlayersEvent\n  onChangeGradient?: ReactOpenlayersEvent\n  onChangeMaxResolution?: ReactOpenlayersEvent\n  onChangeMinResolution?: ReactOpenlayersEvent\n  onChangeOpacity?: ReactOpenlayersEvent\n  onChangeRadius?: ReactOpenlayersEvent\n  onChangeSource?: ReactOpenlayersEvent\n  onChangeVisible?: ReactOpenlayersEvent\n  onChangeZIndex?: ReactOpenlayersEvent\n  onPostcompose?: ReactOpenlayersEvent\n  onPrecompose?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n  onRender?: ReactOpenlayersEvent\n}\n\nexport interface HeatmapEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'change:blur': ReactOpenlayersEvent\n  'change:extent': ReactOpenlayersEvent\n  'change:gradient': ReactOpenlayersEvent\n  'change:maxResolution': ReactOpenlayersEvent\n  'change:minResolution': ReactOpenlayersEvent\n  'change:opacity': ReactOpenlayersEvent\n  'change:radius': ReactOpenlayersEvent\n  'change:source': ReactOpenlayersEvent\n  'change:visible': ReactOpenlayersEvent\n  'change:zIndex': ReactOpenlayersEvent\n  'postcompose': ReactOpenlayersEvent\n  'precompose': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n  'render': ReactOpenlayersEvent\n};\n\nexport class HeatmapReact extends React.Component<HeatmapProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public layer: Heatmap;\n\n  public options: Options = {\n    weight: \"weight\",\n    source: new VectorSource,\n  };\n\n  public events: HeatmapEvents = {\n    'change': undefined,\n    'change:blur': undefined,\n    'change:extent': undefined,\n    'change:gradient': undefined,\n    'change:maxResolution': undefined,\n    'change:minResolution': undefined,\n    'change:opacity': undefined,\n    'change:radius': undefined,\n    'change:source': undefined,\n    'change:visible': undefined,\n    'change:zIndex': undefined,\n    'postcompose': undefined,\n    'precompose': undefined,\n    'propertychange': undefined,\n    'render': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, HeatmapProps>(this.options, this.props);\n    if (!options.weight) options.weight = 'weight';\n    this.layer = new Heatmap(options);\n    if(this.props.zIndex){\n      this.layer.setZIndex(this.props.zIndex);\n    }\n    this.context.layers.push(this.layer);\n\n    if (this.props.layerRef) this.props.layerRef(this.layer);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.layer.on(eventName, olEvents[eventName]);\n    });\n  }\n\n  public componentWillReceiveProps(nextProps: HeatmapProps) {\n    const options = Util.getOptions<Options, HeatmapProps>(this.options, this.props);\n\n    // Updating options first\n    Object.keys(options).forEach((option: string) => {\n      if (options[option] === nextProps[option]) return;\n      const newVal = nextProps[option];\n      switch (option) {\n        case 'gradient': this.layer.setGradient(newVal); break;\n        case 'radius': this.layer.setRadius(newVal); break;\n        case 'blur': this.layer.setBlur(newVal); break;\n        case 'shadow': this.layer.set('shadow', newVal); break;\n        case 'extent': this.layer.setExtent(newVal); break;\n        case 'minResolution': this.layer.setMinResolution(newVal); break;\n        case 'maxResolution': this.layer.setMaxResolution(newVal); break;\n        case 'opacity': this.layer.setOpacity(newVal); break;\n        case 'source': this.layer.setSource(newVal); break;\n        case 'visible': this.layer.setVisible(newVal); break;\n        case 'zIndex': this.layer.setZIndex(newVal); break;\n        default:\n      }\n    });\n\n    if (nextProps.layerRef && nextProps.layerRef !== this.props.layerRef) {\n      nextProps.layerRef(this.layer);\n    }\n\n    // Then update events\n    const oldEvents = Util.getEvents(this.events, this.props);\n    const newEvents = Util.getEvents(this.events, nextProps);\n    Object.keys(this.events).forEach((eventName: string) => {\n      if (oldEvents[eventName]) this.layer.un(eventName, oldEvents[eventName]);\n      if (newEvents[eventName]) this.layer.on(eventName, newEvents[eventName]);\n    })\n  }\n\n  public componentWillUnmount() {\n    this.context.map.removeLayer(this.layer);\n  }\n}","import * as React from 'react';\n\nimport Image from 'ol/layer/Image';\nimport Projection from 'ol/proj/Projection'\nimport olImageStaticSource from 'ol/source/imagestatic'\n\nimport { LayerType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\nimport { Options } from 'ol/layer/BaseImage';\n\nexport interface ImageProps extends Options, LayerType<Image> {\n  zIndex?: number,\n  onChange?: ReactOpenlayersEvent\n  onChangeExtent?: ReactOpenlayersEvent\n  onChangeGradient?: ReactOpenlayersEvent\n  onChangeMaxResolution?: ReactOpenlayersEvent\n  onChangeMinResolution?: ReactOpenlayersEvent\n  onChangeOpacity?: ReactOpenlayersEvent\n  onChangeSource?: ReactOpenlayersEvent\n  onChangeVisible?: ReactOpenlayersEvent\n  onChangeZIndex?: ReactOpenlayersEvent\n  onPostcompose?: ReactOpenlayersEvent\n  onPrecompose?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n  onRender?: ReactOpenlayersEvent\n};\n\nexport interface ImageEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'change:extent': ReactOpenlayersEvent\n  'change:gradient': ReactOpenlayersEvent\n  'change:maxResolution': ReactOpenlayersEvent\n  'change:minResolution': ReactOpenlayersEvent\n  'change:opacity': ReactOpenlayersEvent\n  'change:source': ReactOpenlayersEvent\n  'change:visible': ReactOpenlayersEvent\n  'change:zIndex': ReactOpenlayersEvent\n  'postcompose': ReactOpenlayersEvent\n  'precompose': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n  'render': ReactOpenlayersEvent\n};\n\nexport class ImageReact extends React.Component<ImageProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public layer: Image;\n\n  public options: Options = {\n    opacity: undefined,\n    // Source from official OpenLayers example\n    source: new olImageStaticSource({\n      attributions: '© <a href=\"http://xkcd.com/license.html\">xkcd</a>',\n      url: 'https://imgs.xkcd.com/comics/online_communities.png',\n      projection: new Projection({\n        code: 'xkcd-image',\n        units: 'pixels',\n        extent: [0, 0, 1024, 968]\n      }),\n      imageExtent: [0, 0, 1024, 968]\n    }),\n    visible: undefined,\n    extent: undefined,\n    minResolution: undefined,\n    maxResolution: undefined\n  };\n\n  public events: ImageEvents = {\n    'change': undefined,\n    'change:extent': undefined,\n    'change:gradient': undefined,\n    'change:maxResolution': undefined,\n    'change:minResolution': undefined,\n    'change:opacity': undefined,\n    'change:source': undefined,\n    'change:visible': undefined,\n    'change:zIndex': undefined,\n    'postcompose': undefined,\n    'precompose': undefined,\n    'propertychange': undefined,\n    'render': undefined\n  };\n\n  public render() { return null; }\n\n  public componentDidMount () {\n    const options = Util.getOptions<Options, ImageProps>(this.options, this.props);\n    this.layer = new Image(options);\n    if(this.props.zIndex){\n      this.layer.setZIndex(this.props.zIndex);\n    }\n    this.context.layers.push(this.layer);\n\n    if (this.props.layerRef) this.props.layerRef(this.layer);\n\n    const olEvents = Util.getEvents(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.layer.on(eventName, olEvents[eventName]);\n    })\n  }\n\n  public componentWillReceiveProps (nextProps: ImageProps) {\n    const options = Util.getOptions<Options, ImageProps>(this.options, this.props);\n\n    // Updating options first\n    Object.keys(options).forEach((option: string) => {\n      if (options[option] === nextProps[option]) return;\n      const newVal = nextProps[option];\n      switch (option) {\n        case 'zIndex': this.layer.setZIndex(newVal); break;\n        case 'opacity': this.layer.setOpacity(newVal); break;\n        case 'source': this.layer.setSource(newVal); break;\n        case 'visible': this.layer.setVisible(newVal); break;\n        case 'extent': this.layer.setExtent(newVal); break;\n        case 'minResolution': this.layer.setMinResolution(newVal); break;\n        case 'maxResolution': this.layer.setMaxResolution(newVal);\n        default:\n      }\n    });\n\n    if (nextProps.layerRef && nextProps.layerRef !== this.props.layerRef) {\n      nextProps.layerRef(this.layer);\n    }\n\n    // Then update events\n    const oldEvents = Util.getEvents(this.events, this.props);\n    const newEvents = Util.getEvents(this.events, nextProps);\n    Object.keys(this.events).forEach((eventName: string) => {\n      if (oldEvents[eventName]) this.layer.un(eventName, oldEvents[eventName]);\n      if (newEvents[eventName]) this.layer.on(eventName, newEvents[eventName]);\n    })\n  }\n  \n  public componentWillUnmount () {\n    this.context.map.removeLayer(this.layer);\n  }\n\n}","import * as React from 'react';\n\n// I wish I can name it as 'layers', not 'Layers'\nexport class Layers extends React.Component {\n  public render() {\n    return (<div>{this.props.children}</div>);\n  }\n}\n","import * as React from 'react';\n\nimport Tile from 'ol/layer/Tile';\n\nimport { LayerType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { Omit, ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\nimport { Options } from 'ol/layer/BaseTile';\nimport VectorSource from 'ol/source/Vector';\n\nimport XYZ from 'ol/source/XYZ';\n\n\nexport interface TileProps extends Omit<Options, 'source'>, LayerType<Tile> {\n  source?: Options['source']\n  onChange?:ReactOpenlayersEvent\n  onChangeExtent?:ReactOpenlayersEvent\n  onChangeMinResolution?:ReactOpenlayersEvent\n  onChangeMaxResolution?:ReactOpenlayersEvent\n  onChangeOpacity?:ReactOpenlayersEvent\n  onChangePreload?:ReactOpenlayersEvent\n  onChangeSource?:ReactOpenlayersEvent\n  onChangeUseInterimTilesOnError?:ReactOpenlayersEvent\n  onChangeVisible?:ReactOpenlayersEvent\n  onChangeZIndex?:ReactOpenlayersEvent\n  onPostcompose?:ReactOpenlayersEvent\n  onPrecompose?:ReactOpenlayersEvent\n  onPropertychange?:ReactOpenlayersEvent\n  onRender?:ReactOpenlayersEvent\n}\n\nexport interface TileEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'change:extent': ReactOpenlayersEvent\n  'change:maxResolution': ReactOpenlayersEvent\n  'change:minResolution': ReactOpenlayersEvent\n  'change:opacity': ReactOpenlayersEvent\n  'change:preload': ReactOpenlayersEvent\n  'change:source': ReactOpenlayersEvent\n  'change:useInterimTilesOnError': ReactOpenlayersEvent\n  'change:visible': ReactOpenlayersEvent\n  'change:zIndex': ReactOpenlayersEvent\n  'postcompose': ReactOpenlayersEvent\n  'precompose': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n  'render': ReactOpenlayersEvent\n}\n\nexport class TileReact extends React.Component<TileProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public layer: Tile;\n\n  public options: Options = {\n    source: new XYZ({\n      attributions: '© Google',\n      url: 'https://mt0.google.com/vt/lyrs=y&hl=en&x={x}&y={y}&z={z}&s=Ga'\n    })\n  };\n\n  public events: TileEvents = {\n    'change': undefined,\n    'change:extent': undefined,\n    'change:maxResolution': undefined,\n    'change:minResolution': undefined,\n    'change:opacity': undefined,\n    'change:preload': undefined,\n    'change:source': undefined,\n    'change:useInterimTilesOnError': undefined,\n    'change:visible': undefined,\n    'change:zIndex': undefined,\n    'postcompose': undefined,\n    'precompose': undefined,\n    'propertychange': undefined,\n    'render': undefined\n  };\n\n  public render() {\n    return null;\n  }\n\n  public componentDidMount () {\n    const options = Util.getOptions<Options, TileProps>(this.options, this.props);\n    this.layer = new Tile(options);\n    if (this.props.zIndex){\n      this.layer.setZIndex(this.props.zIndex);\n    }\n    this.context.layers.push(this.layer)\n\n    if (this.props.layerRef) this.props.layerRef(this.layer);\n\n    const olEvents = Util.getEvents<TileEvents, TileProps>(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.layer.on(eventName, olEvents[eventName]);\n    });\n\n    console.log(this.context.layers)\n  }\n\n  public componentWillReceiveProps(nextProps: TileProps) {\n    const options = Util.getOptions<Options, TileProps>(this.options, this.props);\n\n    // Updating options first\n    Object.keys(options).forEach((option: string) => {\n      if (options[option] === nextProps[option]) return;\n      const newVal = nextProps[option];\n      switch (option) {\n        case 'zIndex': this.layer.setZIndex(newVal); break;\n        case 'opacity': this.layer.setOpacity(newVal); break;\n        case 'preload': this.layer.setPreload(newVal); break;\n        case 'source': this.layer.setSource(newVal || new VectorSource()); break;\n        case 'visible': this.layer.setVisible(newVal); break;\n        case 'extent': this.layer.setExtent(newVal); break;\n        case 'minResolution': this.layer.setMinResolution(newVal); break;\n        case 'maxResolution': this.layer.setMaxResolution(newVal); break;\n        case 'useInterimTilesOnError': this.layer.setUseInterimTilesOnError(newVal);\n        default:\n      }\n    });\n\n    if (nextProps.layerRef && nextProps.layerRef !== this.props.layerRef) {\n      nextProps.layerRef(this.layer);\n    }\n\n    // Then update events\n    const oldEvents = Util.getEvents(this.events, this.props);\n    const newEvents = Util.getEvents(this.events, nextProps);\n    Object.keys(this.events).forEach((eventName: string) => {\n      if (oldEvents[eventName]) this.layer.un(eventName, oldEvents[eventName]);\n      if (newEvents[eventName]) this.layer.on(eventName, newEvents[eventName]);\n    })\n  }\n  \n  public componentWillUnmount () {\n    this.context.map.removeLayer(this.layer);\n  }\n\n}","// React\nimport * as React from 'react';\n\n// OpenLayers\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\n\n// react-openlayers\nimport { LayerType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\nimport { Options } from 'ol/layer/BaseVector';\n\n\nexport interface VectorProps extends Options, LayerType<VectorLayer> {\n  onChange?: ReactOpenlayersEvent\n  onChangeExtent?: ReactOpenlayersEvent\n  onChangeMinResolution?: ReactOpenlayersEvent\n  onChangeMaxResolution?: ReactOpenlayersEvent\n  onChangeOpacity?: ReactOpenlayersEvent\n  onChangePreload?: ReactOpenlayersEvent\n  onChangeSource?: ReactOpenlayersEvent\n  onChangeVisible?: ReactOpenlayersEvent\n  onChangeZIndex?: ReactOpenlayersEvent\n  onPostcompose?: ReactOpenlayersEvent\n  onPrecompose?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n  onRender?: ReactOpenlayersEvent\n};\n\nexport interface VectorEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'change:extent': ReactOpenlayersEvent\n  'change:maxResolution': ReactOpenlayersEvent\n  'change:minResolution': ReactOpenlayersEvent\n  'change:opacity': ReactOpenlayersEvent\n  'change:preload': ReactOpenlayersEvent\n  'change:source': ReactOpenlayersEvent\n  'change:visible': ReactOpenlayersEvent\n  'change:zIndex': ReactOpenlayersEvent\n  'postcompose': ReactOpenlayersEvent\n  'precompose': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n  'render': ReactOpenlayersEvent\n}\n\nexport class Vector extends React.Component<VectorProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public layer: VectorLayer;\n\n  // Default options\n  public options: Options = {\n    source: new VectorSource()\n  }\n\n  public events: VectorEvents = {\n    'change': undefined,\n    'change:extent': undefined,\n    'change:maxResolution': undefined,\n    'change:minResolution': undefined,\n    'change:opacity': undefined,\n    'change:preload': undefined,\n    'change:source': undefined,\n    'change:visible': undefined,\n    'change:zIndex': undefined,\n    'postcompose': undefined,\n    'precompose': undefined,\n    'propertychange': undefined,\n    'render': undefined\n  };\n\n  public render() {\n    return null;\n  }\n\n  public componentDidMount() {\n    const options = Util.getOptions(this.options, this.props);\n    this.layer = new VectorLayer(options);\n    if (this.props.zIndex) {\n      this.layer.setZIndex(this.props.zIndex);\n    }\n    this.context.layers.push(this.layer);\n\n    if (this.props.layerRef) this.props.layerRef(this.layer);\n\n    const olEvents = Util.getEvents<VectorEvents, VectorProps>(this.events, this.props);\n    Object.keys(olEvents).forEach((eventName: string) => {\n      this.layer.on(eventName, olEvents[eventName]);\n    });\n  }\n\n  public componentWillReceiveProps(nextProps: VectorProps) {\n    const options = Util.getOptions<Options, VectorProps>(this.options, this.props);\n\n    // Updating options first\n    Object.keys(options).forEach((option: string) => {\n      if (options[option] === nextProps[option]) return;\n      const newVal = nextProps[option];\n      switch (option) {\n        case 'renderOrder': this.layer.set('renderOrder', newVal); break;\n        case 'renderBuffer': this.layer.set('renderBuffer', newVal); break;\n        case 'extent': this.layer.setExtent(newVal); break;\n        case 'minResolution': this.layer.setMinResolution(newVal); break;\n        case 'maxResolution': this.layer.setMaxResolution(newVal); break;\n        case 'opacity': this.layer.setOpacity(newVal); break;\n        case 'source': this.layer.setSource(newVal); break;\n        case 'style': this.layer.setStyle(newVal); break;\n        case 'updateWhileAnimating': this.layer.set('updateWhileAnimating', newVal); break;\n        case 'updateWhileInteracting': this.layer.set('updateWhileInteracting', newVal); break;\n        case 'visible': this.layer.setVisible(newVal); break;\n        case 'zIndex': this.layer.setZIndex(newVal); break;\n        default:\n      }\n    });\n\n    if (nextProps.layerRef && nextProps.layerRef !== this.props.layerRef) {\n      nextProps.layerRef(this.layer);\n    }\n\n    // Then update events\n    const oldEvents = Util.getEvents(this.events, this.props);\n    const newEvents = Util.getEvents(this.events, nextProps);\n    Object.keys(this.events).forEach((eventName: string) => {\n      if (oldEvents[eventName]) this.layer.un(eventName, oldEvents[eventName]);\n      if (newEvents[eventName]) this.layer.on(eventName, newEvents[eventName]);\n    })\n  }\n\n  public componentWillUnmount() {\n    this.context.map.removeLayer(this.layer);\n  }\n\n}","import { Overlay } from './overlay';\nimport { Overlays } from './overlays';\nimport olOverlay from 'ol/Overlay';\n\nexport interface OverlayType<T extends olOverlay> {\n  overlayRef?(layer:T):void\n}\n\nexport { \n  Overlays,\n  Overlay,\n};\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport olOverlay, { Options } from 'ol/Overlay'\n\nimport { OverlayType } from '.';\nimport { MapContext, MapContextType } from '../map';\nimport Util, { ReactOpenlayersEvent, ReactOpenlayersEvents } from '../util';\n\nexport interface OverlayProps extends Options, OverlayType<olOverlay> {\n  onChange?: ReactOpenlayersEvent\n  onChangeelement?: ReactOpenlayersEvent\n  onChangemap?: ReactOpenlayersEvent\n  onChangeoffset?: ReactOpenlayersEvent\n  onChangeposition?: ReactOpenlayersEvent\n  onChangepositioning?: ReactOpenlayersEvent\n  onPropertychange?: ReactOpenlayersEvent\n};\n\nexport interface OverlayEvents extends ReactOpenlayersEvents {\n  'change': ReactOpenlayersEvent\n  'change:element': ReactOpenlayersEvent\n  'change:map': ReactOpenlayersEvent\n  'change:offset': ReactOpenlayersEvent\n  'change:position': ReactOpenlayersEvent\n  'change:positioning': ReactOpenlayersEvent\n  'propertychange': ReactOpenlayersEvent\n};\n\nexport class Overlay extends React.Component<OverlayProps> {\n  public static contextType: React.Context<MapContextType> = MapContext;\n\n  public overlay: olOverlay;\n  public el: HTMLElement;\n\n  public options: Options = {\n    id: undefined,\n    element: undefined,\n    offset: undefined,\n    position: undefined,\n    stopEvent: false,\n    insertFirst: undefined,\n    autoPan: undefined,\n    autoPanAnimation: undefined,\n    autoPanMargin: undefined\n  };\n\n  public events: OverlayEvents = {\n    'change': undefined,\n    'change:element': undefined,\n    'change:map': undefined,\n    'change:offset': undefined,\n    'change:position': undefined,\n    'change:positioning': undefined,\n    'propertychange': undefined\n  };\n\n  public render() {\n    return (\n      <div>\n        {this.props.children}\n      </div>\n    );\n  }\n\n  public componentDidMount() {\n    const options = Util.getOptions<Options, OverlayProps>(this.options, this.props);\n    options.element = (ReactDOM.findDOMNode(this) as Element).querySelector('div') as HTMLElement;\n    this.overlay = new olOverlay(options);\n    this.context.overlays.push(this.overlay);\n    if (this.props.overlayRef) this.props.overlayRef(this.overlay);\n  }\n}\n","import * as React from 'react';\n\nexport class Overlays extends React.Component {\n  public render() {\n    return (<div>{this.props.children}</div>);\n  }\n}\n"],"sourceRoot":""}